// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The dump command run for the polaris repository, prints the JSON describing the full repository 1`] = `
Object {
  "categorizedComponents": Array [
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Button>Add product</Button>",
              },
              Object {
                "code": "<Button outline>Add product</Button>",
              },
              Object {
                "code": "<div style={{color: '#bf0711'}}>
  <Button monochrome outline>
    Retry
  </Button>
</div>",
              },
              Object {
                "code": "<Button plain>View shipping settings</Button>",
              },
              Object {
                "code": "<InlineError
  message={
    <React.Fragment>
      An error occurred. &nbsp;
      <Button plain monochrome>
        Try again
      </Button>
    </React.Fragment>
  }
/>",
              },
              Object {
                "code": "<Button primary>Save theme</Button>",
              },
              Object {
                "code": "<Button destructive>Delete theme</Button>",
              },
              Object {
                "code": "<Button size=\\"slim\\">Save variant</Button>",
              },
              Object {
                "code": "<Button size=\\"large\\">Create store</Button>",
              },
              Object {
                "code": "<Button fullWidth>Add customer</Button>",
              },
              Object {
                "code": "<Button disabled>Buy shipping label</Button>",
              },
              Object {
                "code": "<Button loading>Save product</Button>",
              },
              Object {
                "code": "<Button>Edit shipping address</Button>",
              },
              Object {
                "code": "<Heading>Shipping address</Heading>
<Button accessibilityLabel=\\"Edit shipping address\\">Edit</Button>",
              },
              Object {
                "code": "<Button accessibilityLabel=\\"Change your shipping address\\">Edit</Button>",
              },
              Object {
                "code": "<Button accessibilityLabel=\\"Edit\\">Edit</Button>",
              },
              Object {
                "code": "<Button
  accessibilityLabel=\\"Terms and conditions (opens a new window)\\"
  icon=\\"external\\"
  url=\\"http://example.com\\"
  external
>
  Terms and conditions
</Button>",
              },
              Object {
                "code": "<Button url=\\"http://example.com\\" external>Terms and conditions</Button>
<Button url=\\"http://example.com\\" external>
  Terms and conditions
</Button>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/components/Button",
            "documentation": Object {
              "path": "src/components/Button/README.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Button/Button.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Button/presets/0-default.jsx",
              },
            ],
          },
          "name": "Button",
          "presets": Array [
            Object {
              "elements": Object {
                "button-1": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Click me",
                    "primary": true,
                    "size": "large",
                  },
                },
              },
              "name": "default",
              "rootId": "button-1",
            },
          ],
          "properties": Array [
            Object {
              "description": "The content to display inside the button",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "array",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "A destination to link to, rendered in the href attribute of a link",
              "isRequired": false,
              "name": "url",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "A unique identifier for the button",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
              "isRequired": false,
              "name": "primary",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates a dangerous or potentially negative action",
              "isRequired": false,
              "name": "destructive",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the button, disallowing merchant interaction",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Replaces button text with a spinner while a background action is being performed",
              "isRequired": false,
              "name": "loading",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "medium",
              },
              "description": "Changes the size of the button, giving it more or less padding",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "slim",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
              "isRequired": false,
              "name": "outline",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Allows the button to grow to the width of its container",
              "isRequired": false,
              "name": "fullWidth",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Displays the button with a disclosure icon",
              "isRequired": false,
              "name": "disclosure",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Allows the button to submit a form",
              "isRequired": false,
              "name": "submit",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Renders a button that looks like a link",
              "isRequired": false,
              "name": "plain",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Makes \`plain\` and \`outline\` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to \`plain\` Buttons",
              "isRequired": false,
              "name": "monochrome",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Forces url to open in a new tab",
              "isRequired": false,
              "name": "external",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value.",
              "isRequired": false,
              "name": "download",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Icon to display to the left of the button content",
              "isRequired": false,
              "name": "icon",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                    Object {
                      "name": "shape",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                    Object {
                      "name": "shape",
                      "structure": Object {},
                    },
                    Object {
                      "name": "shape",
                      "structure": Object {},
                    },
                    Object {
                      "name": "func",
                      "structure": Object {},
                    },
                    Object {
                      "name": "shape",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Visually hidden text for screen readers",
              "isRequired": false,
              "name": "accessibilityLabel",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of the element the button controls",
              "isRequired": false,
              "name": "ariaControls",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Tells screen reader the controlled element is expanded",
              "isRequired": false,
              "name": "ariaExpanded",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Tells screen reader the element is pressed",
              "isRequired": false,
              "name": "ariaPressed",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when clicked",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when button becomes focussed",
              "isRequired": false,
              "name": "onFocus",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when focus leaves button",
              "isRequired": false,
              "name": "onBlur",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when a keypress event is registered on the button",
              "isRequired": false,
              "name": "onKeyPress",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when a keyup event is registered on the button",
              "isRequired": false,
              "name": "onKeyUp",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when a keydown event is registered on the button",
              "isRequired": false,
              "name": "onKeyDown",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": true,
              "name": "polaris",
              "type": Object {
                "name": "shape",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Link url=\\"https://help.shopify.com/manual\\">fulfilling orders</Link>",
              },
              Object {
                "code": "<Link monochrome url=\\"https://help.shopify.com/manual\\">
  fulfilling orders
</Link>",
              },
              Object {
                "code": "<Link url=\\"https://help.shopify.com/manual\\" external>
  Shopify Help Center
</Link>",
              },
              Object {
                "code": "<Link url=\\"https://help.shopify.com/manual\\">fulfilling orders</Link>",
              },
              Object {
                "code": "<Link>fulfilling orders</Link>",
              },
              Object {
                "code": "<Link url=\\"https://help.shopify.com/manual\\">fulfilling orders</Link>",
              },
              Object {
                "code": "<Link url=\\"https://help.shopify.com/manual\\">order fulfillment section</Link>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/components/Link",
            "documentation": Object {
              "path": "src/components/Link/README.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Link/Link.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Link/presets/0-default.jsx",
              },
            ],
          },
          "name": "Link",
          "presets": Array [
            Object {
              "elements": Object {
                "link-1": Object {
                  "name": "Link",
                  "props": Object {
                    "children": "fulfilling orders",
                    "url": "https://help.shopify.com/manual",
                  },
                },
              },
              "name": "default",
              "rootId": "link-1",
            },
          ],
          "properties": Array [
            Object {
              "description": "ID for the link",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "The url to link to",
              "isRequired": false,
              "name": "url",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "The content to display inside link",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Use for a links that open a different site",
              "isRequired": false,
              "name": "external",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Makes the link color the same as the current text color and adds an underline",
              "isRequired": false,
              "name": "monochrome",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Callback when a link is clicked",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": true,
              "name": "polaris",
              "type": Object {
                "name": "shape",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "Actions",
    },
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Card title=\\"Online store dashboard\\" sectioned>
  <p>View a summary of your online store’s performance.</p>
</Card>",
              },
              Object {
                "code": "<Card sectioned title=\\"Variants\\" actions={[{content: 'Add variant'}]}>
  <p>
    Add variants if this product comes in multiple versions, like different
    sizes or colors.
  </p>
</Card>",
              },
              Object {
                "code": "<Card
  title=\\"Shipment 1234\\"
  secondaryFooterAction={{content: 'Cancel shipment'}}
  primaryFooterAction={{content: 'Add tracking number'}}
>
  <Card.Section title=\\"Items\\">
    <List>
      <List.Item>1 × Isis Glass, 4-Pack</List.Item>
      <List.Item>1 × Anubis Cup, 2-Pack</List.Item>
    </List>
  </Card.Section>
</Card>",
              },
              Object {
                "code": "<Card title=\\"Online store dashboard\\">
  <Card.Section>
    <p>View a summary of your online store’s performance.</p>
  </Card.Section>

  <Card.Section>
    <p>
      View a summary of your online store’s performance, including sales,
      visitors, top products, and referrals.
    </p>
  </Card.Section>
</Card>",
              },
              Object {
                "code": "<Card title=\\"Online store dashboard\\">
  <Card.Section title=\\"Reports\\">
    <p>View a summary of your online store’s performance.</p>
  </Card.Section>

  <Card.Section title=\\"Summary\\">
    <p>
      View a summary of your online store’s performance, including sales,
      visitors, top products, and referrals.
    </p>
  </Card.Section>
</Card>",
              },
              Object {
                "code": "<Card title=\\"Staff accounts\\">
  <Card.Section>
    <List>
      <List.Item>Felix Crafford</List.Item>
      <List.Item>Ezequiel Manno</List.Item>
    </List>
  </Card.Section>

  <Card.Section subdued title=\\"Deactivated staff accounts\\">
    <List>
      <List.Item>Felix Crafford</List.Item>
      <List.Item>Ezequiel Manno</List.Item>
    </List>
  </Card.Section>
</Card>",
              },
              Object {
                "code": "<Card title=\\"Deactivated staff accounts\\" sectioned subdued>
  <List>
    <List.Item>Felix Crafford</List.Item>
    <List.Item>Ezequiel Manno</List.Item>
  </List>
</Card>",
              },
              Object {
                "code": "<Card>
  <Card.Header
    actions={[
      {
        content: 'Preview',
      },
    ]}
    title=\\"Staff accounts\\"
  >
    <Popover
      active
      activator={
        <Button disclosure plain>
          Add account
        </Button>
      }
      onClose={() => {}}
    >
      <ActionList items={[{content: 'Member'}, {content: 'Admin'}]} />
    </Popover>
  </Card.Header>
  <Card.Section>
    <List>
      <List.Item>Felix Crafford</List.Item>
      <List.Item>Ezequiel Manno</List.Item>
    </List>
  </Card.Section>
</Card>",
              },
              Object {
                "code": "<Card title=\\"Products\\">
  <Card.Section
    title={
      <Stack>
        <Icon source=\\"products\\" />
        <Subheading>New Products</Subheading>
      </Stack>
    }
  >
    <List>
      <List.Item>Socks</List.Item>
      <List.Item>Super Shoes</List.Item>
    </List>
  </Card.Section>
</Card>",
              },
              Object {
                "code": "<Card
  secondaryFooterAction={{content: 'Dismiss'}}
  primaryFooterAction={{content: 'Export Report'}}
>
  <Card.Header
    actions={[
      {
        content: 'Total Sales',
      },
    ]}
    title=\\"Sales\\"
  >
    <Popover
      active={false}
      activator={
        <Button disclosure plain>
          View Sales
        </Button>
      }
      onClose={() => {}}
    >
      <ActionList items={[{content: 'Gross Sales'}, {content: 'Net Sales'}]} />
    </Popover>
  </Card.Header>
  <Card.Section>
    <TextContainer>
      You can use sales reports to see information about your customers' orders
      based on criteria such as sales over time, by channel, or by staff.
    </TextContainer>
  </Card.Section>
  <Card.Section title=\\"Total Sales Breakdown\\">
    <ResourceList
      resourceName={{singular: 'sale', plural: 'sales'}}
      items={[
        {
          sales: 'Orders',
          amount: 'USD$0.00',
          url: 'reports/orders',
        },
        {
          sales: 'Returns',
          amount: '-USD$250.00',
          url: 'reports/returns',
        },
      ]}
      renderItem={(item) => {
        const {sales, amount, url} = item;
        return (
          <ResourceList.Item
            url={url}
            accessibilityLabel={\`View Sales for \${sales}\`}
          >
            <Stack>
              <Stack.Item fill>{sales}</Stack.Item>
              <Stack.Item>{amount}</Stack.Item>
            </Stack>
          </ResourceList.Item>
        );
      }}
    />
  </Card.Section>
  <Card.Section title=\\"Deactivated reports\\" subdued>
    <List>
      <List.Item>Payouts</List.Item>
      <List.Item>Total Sales By Channel</List.Item>
    </List>
  </Card.Section>
  <Card.Section title=\\"Note\\">
    <TextContainer>
      The sales reports are available only if your store is on the Shopify plan
      or higher.
    </TextContainer>
  </Card.Section>
</Card>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/components/Card",
            "documentation": Object {
              "path": "src/components/Card/README.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Card/Card.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Card/presets/0-default.jsx",
              },
            ],
          },
          "name": "Card",
          "presets": Array [
            Object {
              "elements": Object {
                "card-1": Object {
                  "name": "Card",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "card_section-1",
                      },
                      Object {
                        "uxpinPresetElementId": "card_section-2",
                      },
                      Object {
                        "uxpinPresetElementId": "card_section-3",
                      },
                    ],
                    "title": "Multiple sections card",
                  },
                },
                "card_section-1": Object {
                  "name": "Card.Section",
                  "props": Object {
                    "children": "Section 1",
                  },
                },
                "card_section-2": Object {
                  "name": "Card.Section",
                  "props": Object {
                    "children": "Section 2",
                  },
                },
                "card_section-3": Object {
                  "name": "Card.Section",
                  "props": Object {
                    "children": "Section 3",
                  },
                },
              },
              "name": "default",
              "rootId": "card-1",
            },
          ],
          "properties": Array [
            Object {
              "description": "Title content for the card",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Inner content of the card",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "A less prominent card",
              "isRequired": false,
              "name": "subdued",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Auto wrap content in section",
              "isRequired": false,
              "name": "sectioned",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Card header actions",
              "isRequired": false,
              "name": "actions",
              "type": Object {
                "name": "array",
                "structure": Object {},
              },
            },
            Object {
              "description": "Primary action in the card footer",
              "isRequired": false,
              "name": "primaryFooterAction",
              "type": Object {
                "name": "shape",
                "structure": Object {},
              },
            },
            Object {
              "description": "Secondary action in the card footer",
              "isRequired": false,
              "name": "secondaryFooterAction",
              "type": Object {
                "name": "shape",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/components/Card/components/Header",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Card/components/Header/Header.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Card/components/Header/presets/0-default.jsx",
              },
            ],
          },
          "name": "Header",
          "namespace": Object {
            "importSlug": "Card_Header",
            "name": "Card",
          },
          "presets": Array [
            Object {
              "elements": Object {
                "card_header-1": Object {
                  "name": "Card.Header",
                  "props": Object {
                    "title": "Header title",
                  },
                },
              },
              "name": "default",
              "rootId": "card_header-1",
            },
          ],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "actions",
              "type": Object {
                "name": "array",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/components/Card/components/Section",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Card/components/Section/Section.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Card/components/Section/presets/0-default.jsx",
              },
            ],
          },
          "name": "Section",
          "namespace": Object {
            "importSlug": "Card_Section",
            "name": "Card",
          },
          "presets": Array [
            Object {
              "elements": Object {
                "card_section-1": Object {
                  "name": "Card.Section",
                  "props": Object {
                    "children": "Section 1",
                  },
                },
              },
              "name": "default",
              "rootId": "card_section-1",
            },
          ],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "subdued",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "fullWidth",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "Structure",
    },
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Avatar customer name=\\"Farrah\\" />",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/components/Avatar",
            "documentation": Object {
              "path": "src/components/Avatar/README.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Avatar/Avatar.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Avatar/presets/0-default.jsx",
              },
            ],
          },
          "name": "Avatar",
          "presets": Array [
            Object {
              "elements": Object {
                "avatar-1": Object {
                  "name": "Avatar",
                  "props": Object {
                    "customer": true,
                    "name": "Farrah",
                  },
                },
              },
              "name": "default",
              "rootId": "avatar-1",
            },
          ],
          "properties": Array [
            Object {
              "defaultValue": Object {
                "value": "medium",
              },
              "description": "Size of avatar",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "The name of the person",
              "isRequired": false,
              "name": "name",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Initials of person to display",
              "isRequired": false,
              "name": "initials",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Whether the avatar is for a customer",
              "isRequired": false,
              "name": "customer",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "URL of the avatar image which falls back to initials if the image fails to load",
              "isRequired": false,
              "name": "source",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Accessible label for the avatar image",
              "isRequired": false,
              "name": "accessibilityLabel",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": true,
              "name": "polaris",
              "type": Object {
                "name": "shape",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Badge>Fulfilled</Badge>",
              },
              Object {
                "code": "<Badge status=\\"info\\">Published</Badge>",
              },
              Object {
                "code": "<Badge status=\\"success\\">Funds recovered</Badge>",
              },
              Object {
                "code": "<Badge status=\\"attention\\">Unfulfilled</Badge>",
              },
              Object {
                "code": "<Badge status=\\"warning\\">SSL unavailable</Badge>",
              },
              Object {
                "code": "<Badge progress=\\"incomplete\\">Unfulfilled</Badge>",
              },
              Object {
                "code": "<Badge progress=\\"partiallyComplete\\">Partially fulfilled</Badge>",
              },
              Object {
                "code": "<Badge progress=\\"complete\\">Fulfilled</Badge>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/components/Badge",
            "documentation": Object {
              "path": "src/components/Badge/README.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "typescript",
              "path": "src/components/Badge/Badge.tsx",
            },
            "presets": Array [
              Object {
                "path": "src/components/Badge/presets/0-default.jsx",
              },
            ],
          },
          "name": "Badge",
          "presets": Array [
            Object {
              "elements": Object {
                "badge-1": Object {
                  "name": "Badge",
                  "props": Object {
                    "children": "UXPin Merge",
                    "size": "medium",
                  },
                },
              },
              "name": "default",
              "rootId": "badge-1",
            },
          ],
          "properties": Array [
            Object {
              "description": "The content to display inside the badge.",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Set the color of the badge for the given status.",
              "isRequired": false,
              "name": "status",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "info",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "attention",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "new",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Render a pip showing the progress of a given task.",
              "isRequired": false,
              "name": "progress",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "incomplete",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "partiallyComplete",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "complete",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "medium",
              },
              "description": "Medium or small size. Use \`small\` only in the main navigation of an app frame.",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": true,
              "name": "polaris",
              "type": Object {
                "name": "shape",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "Images and Icons",
    },
  ],
  "name": "Shopify Polaris",
  "vcs": Object {
    "branchName": "master",
    "commitHash": "4e89f89e1b6aafabd9228a4745f4eece67de9937",
    "paths": Object {
      "configPath": "/home/circleci/project/packages/uxpin-merge-cli/test/resources/repos/polaris/uxpin.config.js",
      "projectRoot": "/home/circleci/project/packages/uxpin-merge-cli/test/resources/repos/polaris",
    },
  },
}
`;
