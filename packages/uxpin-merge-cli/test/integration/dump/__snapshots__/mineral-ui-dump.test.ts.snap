// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The dump command run for the mineral-ui repository prints the JSON describing the full repository 1`] = `
Object {
  "categorizedComponents": Array [
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Avatar",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Avatar/Avatar.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Avatar/presets/0-default.jsx",
              },
            ],
          },
          "name": "Avatar",
          "presets": Array [
            Object {
              "elements": Object {
                "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R": Object {
                  "name": "Avatar",
                  "props": Object {
                    "children": "Melissa",
                    "size": "large",
                  },
                },
              },
              "name": "default",
              "rootId": "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R",
            },
          ],
          "properties": Array [
            Object {
              "description": "When \`children\` is a string, this will be the rendered text",
              "isRequired": false,
              "name": "abbr",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Background color",
              "isRequired": false,
              "name": "background",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "\`img\` (with an \`alt\` attribute), [Icon](/components/icon) (with a \`title\`), or a
string",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Text color",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "circle",
              },
              "description": "Available shapes",
              "isRequired": false,
              "name": "shape",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "circle",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "rounded",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "square",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "large",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<div>
  <Button primary>Default</Button>
  <Button variant=\\"success\\" primary>Success</Button>
  <Button variant=\\"warning\\" primary>Warning</Button>
  <Button variant=\\"danger\\" primary>Danger</Button>
  <Button primary disabled>Disabled</Button>
</div>",
              },
              Object {
                "code": "<div>
  <Button>Default</Button>
  <Button variant=\\"success\\">Success</Button>
  <Button variant=\\"warning\\">Warning</Button>
  <Button variant=\\"danger\\">Danger</Button>
  <Button disabled>Disabled</Button>
</div>",
              },
              Object {
                "code": "<div>
  <Button minimal>Default</Button>
  <Button variant=\\"success\\" minimal>Success</Button>
  <Button variant=\\"warning\\" minimal>Warning</Button>
  <Button variant=\\"danger\\" minimal>Danger</Button>
  <Button disabled minimal>Disabled</Button>
</div>",
              },
              Object {
                "code": "<div>
  <Button size=\\"small\\">Small</Button>
  <Button size=\\"medium\\">Medium</Button>
  <Button>Large</Button>
  <Button size=\\"jumbo\\">Jumbo</Button>
  <div>
  <Button fullWidth>Full Width</Button>
  </div>
</div>",
              },
              Object {
                "code": "<Button element=\\"a\\" href=\\"#link\\">Link</Button>",
              },
              Object {
                "code": "<div style={{width: '100px'}}>
  <Button>Supercalifragilisticexpialidocious</Button>
</div>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Button",
            "documentation": Object {
              "path": "src/library/Button/Button.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Button/Button.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Button/presets/0-default.jsx",
              },
            ],
          },
          "name": "Button",
          "presets": Array [
            Object {
              "elements": Object {
                "1526ABF05067F99EF65F83152E26DA39": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Default",
                    "fullWidth": true,
                    "primary": true,
                  },
                },
              },
              "name": "default",
              "rootId": "1526ABF05067F99EF65F83152E26DA39",
            },
          ],
          "properties": Array [
            Object {
              "description": "Rendered content of the component",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Displays a circular Button",
              "isRequired": false,
              "name": "circular",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the Button",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "button",
              },
              "description": "Element to be used as the root node - e.g. \`a\` can be used to create a link that is styled like a Button",
              "isRequired": false,
              "name": "element",
              "type": Object {
                "name": "unsupported",
                "structure": Object {
                  "raw": "$FlowFixMe",
                },
              },
            },
            Object {
              "description": "Stretch Button to fill its container",
              "isRequired": false,
              "name": "fullWidth",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Icon that goes after the children",
              "isRequired": false,
              "name": "iconEnd",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "Icon that goes before the children",
              "isRequired": false,
              "name": "iconStart",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "Display a minimal Button",
              "isRequired": false,
              "name": "minimal",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Called with the click event",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Display a primary Button",
              "isRequired": false,
              "name": "primary",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "large",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "button",
              },
              "description": "Available types",
              "isRequired": false,
              "name": "type",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<ButtonGroup aria-label=\\"Edit text\\">
  <Button>Cut</Button>
  <Button>Copy</Button>
  <Button>Paste</Button>
</ButtonGroup>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/ButtonGroup",
            "documentation": Object {
              "path": "src/library/ButtonGroup/ButtonGroup.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/ButtonGroup/ButtonGroup.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/ButtonGroup/presets/0-default.jsx",
              },
            ],
          },
          "name": "ButtonGroup",
          "presets": Array [
            Object {
              "elements": Object {
                "03455D211819BDD6C6C97C6FE8BDDDA5": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Paste",
                  },
                },
                "55DF06402684B133C8CF272B47DE4501": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Copy",
                  },
                },
                "BA01E0854962CD334C2A036C3675383F": Object {
                  "name": "ButtonGroup",
                  "props": Object {
                    "aria-label": "Edit text",
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "BDCB1BC3745A75BD9A6320D511961749",
                      },
                      Object {
                        "uxpinPresetElementId": "55DF06402684B133C8CF272B47DE4501",
                      },
                      Object {
                        "uxpinPresetElementId": "03455D211819BDD6C6C97C6FE8BDDDA5",
                      },
                    ],
                  },
                },
                "BDCB1BC3745A75BD9A6320D511961749": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Cut",
                  },
                },
              },
              "name": "default",
              "rootId": "BA01E0854962CD334C2A036C3675383F",
            },
          ],
          "properties": Array [
            Object {
              "description": "Accessible label",
              "isRequired": true,
              "name": "aria-label",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Index or array of indices of the selected [Button(s)](/components/button).
Primarily for use with controlled components with a \`mode\` prop defined.
If this prop is specified, an \`onClick\` handler must also be specified.
See also: \`defaultChecked\`",
              "isRequired": false,
              "name": "checked",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "number",
                          "structure": Object {},
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Mineral [Button](/components/button) components",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Index or array of indices of the selected [Button(s)](/components/button);
primarily for use with uncontrolled components with a \`mode\` prop defined.",
              "isRequired": false,
              "name": "defaultChecked",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "number",
                          "structure": Object {},
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Disable all [Button](/components/button) children",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Stretch ButtonGroup to fill its container",
              "isRequired": false,
              "name": "fullWidth",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Behavioral mode of [Button](/components/button) children: either
[Radio](/components/radio) or [Checkbox](/components/checkbox)",
              "isRequired": false,
              "name": "mode",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "checkbox",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "radio",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Called when a toggleable Button is selected",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called with the click event",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Checkbox/Checkbox",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Checkbox/Checkbox/Checkbox.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Checkbox/Checkbox/presets/0-default.jsx",
              },
            ],
          },
          "name": "Checkbox",
          "presets": Array [
            Object {
              "elements": Object {
                "F27A6F0AA6ACD525BA5DAB3CB4C29983": Object {
                  "name": "Checkbox",
                  "props": Object {
                    "defaultChecked": true,
                    "label": "Quartz",
                    "name": "minerals",
                    "value": "quartz",
                  },
                },
              },
              "name": "default",
              "rootId": "F27A6F0AA6ACD525BA5DAB3CB4C29983",
            },
          ],
          "properties": Array [
            Object {
              "description": "Checked state of the checkbox. Primarily for use with controlled
components. If this prop is specified, an \`onChange\` handler must also be
specified. See also: \`defaultChecked\`.",
              "isRequired": false,
              "name": "checked",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private CSS className",
              "isRequired": false,
              "name": "className",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Initial checked state of the checkbox; primarily for use with
uncontrolled components",
              "isRequired": false,
              "name": "defaultChecked",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Initial indeterminate state of the checkbox; primarily for use with
uncontrolled components",
              "isRequired": false,
              "name": "defaultIndeterminate",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the checkbox",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Visually hide label, but keep available for [assistive technologies](https://webaccess.berkeley.edu/resources/assistive-technology)",
              "isRequired": false,
              "name": "hideLabel",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Partially checked state. Primarily for use with controlled components.
If this prop is specified, an \`onChange\` handler must also be
specified. See also: \`defaultIndeterminate\`.",
              "isRequired": false,
              "name": "indeterminate",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Ref for the checkbox",
              "isRequired": false,
              "name": "inputRef",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "node",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "HTMLInputElement",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Indicates that the value of the input is invalid",
              "isRequired": false,
              "name": "invalid",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Maximize the distance between the label and the control",
              "isRequired": false,
              "name": "justify",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Label associated with the input element",
              "isRequired": true,
              "name": "label",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "end",
              },
              "description": "Determines the position of the label relative to the control",
              "isRequired": false,
              "name": "labelPosition",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Used to uniquely define a group of checkboxes",
              "isRequired": false,
              "name": "name",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Function called when a checkbox is selected",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticInputEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "@Private Function called when a checkbox is clicked.",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticInputEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Indicates that the user must select an option before submitting a form",
              "isRequired": false,
              "name": "required",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Props to be applied directly to the root element rather than the input",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "large",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "The value of the checkbox",
              "isRequired": false,
              "name": "value",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Checkbox/CheckboxGroup",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Checkbox/CheckboxGroup/CheckboxGroup.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Checkbox/CheckboxGroup/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Checkbox/CheckboxGroup/presets/50-controlled with data object.jsx",
              },
            ],
          },
          "name": "CheckboxGroup",
          "presets": Array [
            Object {
              "elements": Object {
                "0YDENGD0Q6VGDXJK3N1C0EFN2GHHDFSU": Object {
                  "name": "CheckboxGroup",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
                      },
                      Object {
                        "uxpinPresetElementId": "9BZANYTUTRX8FFZIOATGB0ABIPYYLKTD",
                      },
                      Object {
                        "uxpinPresetElementId": "25742CUEE2H85OM1XY9XYWQ1QUE12QUA",
                      },
                    ],
                    "defaultChecked": Array [
                      "hematite",
                      "pyrite",
                    ],
                    "name": "minerals1",
                  },
                },
                "25742CUEE2H85OM1XY9XYWQ1QUE12QUA": Object {
                  "name": "Checkbox",
                  "props": Object {
                    "label": "Pyrite",
                    "value": "pyrite",
                  },
                },
                "9BZANYTUTRX8FFZIOATGB0ABIPYYLKTD": Object {
                  "name": "Checkbox",
                  "props": Object {
                    "label": "Hematite",
                    "value": "hematite",
                  },
                },
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Checkbox",
                  "props": Object {
                    "label": "Azurite",
                    "value": "azurite",
                  },
                },
              },
              "name": "default",
              "rootId": "0YDENGD0Q6VGDXJK3N1C0EFN2GHHDFSU",
            },
            Object {
              "elements": Object {
                "HT9WU09S0XSJNWKDZPE1CFVVH11FXRDC": Object {
                  "name": "CheckboxGroup",
                  "props": Object {
                    "data": Array [
                      Object {
                        "label": "Fluorite",
                        "value": "fluorite",
                      },
                      Object {
                        "label": "Magnetite",
                        "value": "magnetite",
                      },
                      Object {
                        "label": "Quartz",
                        "value": "quartz",
                      },
                    ],
                    "name": "minerals-2",
                  },
                },
              },
              "name": "controlled with data object",
              "rootId": "HT9WU09S0XSJNWKDZPE1CFVVH11FXRDC",
            },
          ],
          "properties": Array [
            Object {
              "description": "Array of values of the selected Checkboxes; primarily for use with
controlled components. If this prop is specified, an \`onChange\` handler
must also be specified. See also: \`defaultChecked\`.",
              "isRequired": false,
              "name": "checked",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Mineral [Checkbox](/components/checkbox) components",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Data used to contruct [Checkboxes](/components/checkbox), see [example](#data)",
              "isRequired": false,
              "name": "data",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "shape",
                    "structure": Object {
                      "label": Object {
                        "name": "union",
                        "structure": Object {
                          "elements": Array [
                            Object {
                              "name": "string",
                              "structure": Object {},
                            },
                            Object {
                              "name": "element",
                              "structure": Object {},
                            },
                          ],
                        },
                      },
                      "value": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                    },
                  },
                },
              },
            },
            Object {
              "description": "Array of values of the selected [Checkboxes](/components/checkbox); primarily for
use with uncontrolled components.",
              "isRequired": false,
              "name": "defaultChecked",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Display the choices inline horizontally rather than stacked vertically.",
              "isRequired": false,
              "name": "inline",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "The name of the group",
              "isRequired": true,
              "name": "name",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Function called when a choice is selected",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Props to be applied directly to the root element",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "(() => {
  function IconDanger() {
    return (
      <Icon>
        <g>
          <path d=\\"M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z\\"/>
        </g>
      </Icon>
    );
  }
  
  const data = [
    {
      items: [
        {
          text: 'Menu item with onClick',
          onClick: event => { console.log(event); }
        },
        {
          text: 'Menu item',
          secondaryText: 'Secondary text'
        }
      ]
    },
    {
      title: 'Group Title',
      items: [
        {
          text: 'Icon at start',
          iconStart: <IconDanger />
        },
        {
          text: 'Icon at end',
          iconEnd: <IconDanger />
        },
        {
          divider: true
        },
        {
          text: 'Danger variant',
          variant: 'danger' // 'danger' | 'success' | 'warning'
        },
        {
          text: 'Disabled menu item',
          onClick: () => { console.log('onClick is not triggered for disabled MenuItems'); },
          disabled: true
        }
      ]
    }
  ];

  return (
    <Dropdown data={data}>
      <Button>Menu</Button>
    </Dropdown>
  );
})();",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Dropdown",
            "documentation": Object {
              "path": "src/library/Dropdown/Dropdown.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Dropdown/Dropdown.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Dropdown/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Dropdown/presets/50-with icons.jsx",
              },
            ],
          },
          "name": "Dropdown",
          "presets": Array [
            Object {
              "elements": Object {
                "1526ABF05067F99EF65F83152E26DA39": Object {
                  "name": "Dropdown",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "SPNM3VK5JSHWM6LK9JJ7OTHYF96AX6KU",
                      },
                    ],
                    "data": Array [
                      Object {
                        "secondaryText": "Secondary text",
                        "text": "Menu item",
                      },
                      Object {
                        "divider": true,
                      },
                      Object {
                        "text": "Danger variant",
                        "variant": "danger",
                      },
                      Object {
                        "disabled": true,
                        "text": "Disabled menu item",
                      },
                    ],
                  },
                },
                "SPNM3VK5JSHWM6LK9JJ7OTHYF96AX6KU": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Menu",
                  },
                },
              },
              "name": "default",
              "rootId": "1526ABF05067F99EF65F83152E26DA39",
            },
            Object {
              "elements": Object {
                "1526ABF05067F99EF65F83152E26DA39": Object {
                  "name": "Dropdown",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "SPNM3VK5JSHWM6LK9JJ7OTHYF96AX6KU",
                      },
                      Object {
                        "uxpinPresetElementId": "LUT2OEH5MBWIZ14927AYRL9T0UWD6ABK",
                      },
                      Object {
                        "uxpinPresetElementId": "8GZ573PJUL8MCE239NVM7O6GTLOB2JQQ",
                      },
                    ],
                    "data": Array [
                      Object {
                        "text": "Menu item with onClick",
                      },
                      Object {
                        "secondaryText": "Secondary text",
                        "text": "Menu item",
                      },
                      Object {
                        "iconStart": Object {
                          "uxpinPresetElementId": "LUT2OEH5MBWIZ14927AYRL9T0UWD6ABK",
                        },
                        "text": "Icon at start",
                      },
                      Object {
                        "iconEnd": Object {
                          "uxpinPresetElementId": "8GZ573PJUL8MCE239NVM7O6GTLOB2JQQ",
                        },
                        "text": "Icon at end",
                      },
                      Object {
                        "divider": true,
                      },
                      Object {
                        "text": "Danger variant",
                        "variant": "danger",
                      },
                      Object {
                        "disabled": true,
                        "text": "Disabled menu item",
                      },
                    ],
                  },
                },
                "8GZ573PJUL8MCE239NVM7O6GTLOB2JQQ": Object {
                  "name": "IconCloud",
                  "props": Object {},
                },
                "LUT2OEH5MBWIZ14927AYRL9T0UWD6ABK": Object {
                  "name": "IconCloud",
                  "props": Object {},
                },
                "SPNM3VK5JSHWM6LK9JJ7OTHYF96AX6KU": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Menu",
                  },
                },
              },
              "name": "with icons",
              "rootId": "1526ABF05067F99EF65F83152E26DA39",
            },
          ],
          "properties": Array [
            Object {
              "description": "Trigger for the Dropdown. Optionally provides custom rendering control.
See the [custom trigger example](/components/dropdown#custom-trigger)
and our [render props guide](/render-props).",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "node",
                      "structure": Object {},
                    },
                    Object {
                      "name": "func",
                      "structure": Object {
                        "arguments": Array [
                          Object {
                            "name": "props",
                            "type": Object {
                              "name": "unsupported",
                              "structure": Object {
                                "raw": "intersection",
                              },
                            },
                          },
                        ],
                        "returnType": Object {
                          "name": "node",
                          "structure": Object {},
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Data from which the [Menu](/components/menu#data) will be constructed
(see [example](#data))",
              "isRequired": true,
              "name": "data",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "Items",
                      },
                    },
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "ItemGroups",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Index of item to be highlighted upon initialization. Primarily for
use with uncontrolled components.",
              "isRequired": false,
              "name": "defaultHighlightedIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Open the Dropdown upon initialization. Primarily for use with uncontrolled
components.",
              "isRequired": false,
              "name": "defaultIsOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disable the Dropdown",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Index of the highlighted item. For use with controlled components.",
              "isRequired": false,
              "name": "highlightedIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of the Dropdown",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Determines whether the Dropdown is open. For use with controlled
components.",
              "isRequired": false,
              "name": "isOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Provides custom rendering control for the items. See the
[custom item example](/components/dropdown#custom-item) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "item",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "intersection",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "text",
              },
              "description": "Specifies a key in the item data that gives an item its unique identity.
See the [React docs](https://reactjs.org/docs/lists-and-keys.html#keys).",
              "isRequired": false,
              "name": "itemKey",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Provides custom rendering control for the menu. See the
[custom menu example](/components/dropdown#custom-menu) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "menu",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "intersection",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Plugins that are used to alter behavior. See
[PopperJS docs](https://popper.js.org/popper-documentation.html#modifiers)
for options.",
              "isRequired": false,
              "name": "modifiers",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Called when Dropdown is closed",
              "isRequired": false,
              "name": "onClose",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when Dropdown is opened",
              "isRequired": false,
              "name": "onOpen",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "bottom-start",
              },
              "description": "Placement of the Dropdown menu",
              "isRequired": false,
              "name": "placement",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-start",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Use a Portal to render the Dropdown menu to the body rather than as a
sibling to the trigger",
              "isRequired": false,
              "name": "usePortal",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Display a wider Dropdown menu",
              "isRequired": false,
              "name": "wide",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Form/FormField",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Form/FormField/FormField.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Form/FormField/presets/0-default.jsx",
              },
            ],
          },
          "name": "FormField",
          "presets": Array [
            Object {
              "elements": Object {
                "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0": Object {
                  "name": "FormField",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "ZYFOAVMGAZUGQF6G6I866PTY5U5B10A6",
                      },
                    ],
                    "label": "Name",
                  },
                },
                "ZYFOAVMGAZUGQF6G6I866PTY5U5B10A6": Object {
                  "name": "TextInput",
                  "props": Object {},
                },
              },
              "name": "default",
              "rootId": "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0",
            },
          ],
          "properties": Array [
            Object {
              "description": "Caption associated with the input element; commonly used to provide help
text",
              "isRequired": false,
              "name": "caption",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Form input element",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private CSS className",
              "isRequired": false,
              "name": "className",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Visually hide label, but keep available for [assistive technologies](https://webaccess.berkeley.edu/resources/assistive-technology)",
              "isRequired": false,
              "name": "hideLabel",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of the FormField",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Form input class; alternative to \`children\`",
              "isRequired": false,
              "name": "input",
              "type": Object {
                "name": "unsupported",
                "structure": Object {
                  "raw": "React$ComponentType",
                },
              },
            },
            Object {
              "description": "Props to be applied directly to the root element, rather than the input",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Label associated with the input element",
              "isRequired": true,
              "name": "label",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Marks associated input as required",
              "isRequired": false,
              "name": "required",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "Required",
              },
              "description": "Text used to indicate a required field",
              "isRequired": false,
              "name": "requiredText",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Secondary text associated with the input element; takes precedence over
\`requiredText\`",
              "isRequired": false,
              "name": "secondaryText",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Form/FormFieldDivider",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Form/FormFieldDivider/FormFieldDivider.js",
            },
            "presets": Array [],
          },
          "name": "FormFieldDivider",
          "presets": Array [],
          "properties": Array [],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Form/FormFieldset",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Form/FormFieldset/FormFieldset.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Form/FormFieldset/presets/0-default.jsx",
              },
            ],
          },
          "name": "FormFieldset",
          "presets": Array [
            Object {
              "elements": Object {
                "1CERL36N4BI0HMJKUBS4PG23AL1JNOIA": Object {
                  "name": "TextInput",
                  "props": Object {
                    "type": "password",
                  },
                },
                "DWST8ARSNIUIBSOCFVZ73ELAVWCUBYVQ": Object {
                  "name": "FormField",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "1CERL36N4BI0HMJKUBS4PG23AL1JNOIA",
                      },
                    ],
                    "label": "Password",
                  },
                },
                "R73VROA306AR7DO0R6SUTQNDQI6S73NR": Object {
                  "name": "FormField",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "ZYFOAVMGAZUGQF6G6I866PTY5U5B10A6",
                      },
                    ],
                    "label": "Email",
                  },
                },
                "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0": Object {
                  "name": "FormFieldset",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "R73VROA306AR7DO0R6SUTQNDQI6S73NR",
                      },
                      Object {
                        "uxpinPresetElementId": "DWST8ARSNIUIBSOCFVZ73ELAVWCUBYVQ",
                      },
                    ],
                    "legend": "Login",
                  },
                },
                "ZYFOAVMGAZUGQF6G6I866PTY5U5B10A6": Object {
                  "name": "TextInput",
                  "props": Object {
                    "type": "email",
                  },
                },
              },
              "name": "default",
              "rootId": "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0",
            },
          ],
          "properties": Array [
            Object {
              "description": "Rendered content of the component, most likely [FormField](/components/form-field)",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disable (visually) the fieldset",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Title of the fieldset",
              "isRequired": false,
              "name": "legend",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<div>
  <Link href=\\"http://example.com\\">Regular</Link>
  <Link variant=\\"danger\\" href=\\"http://example.com\\">Danger</Link>
  <Link variant=\\"success\\" href=\\"http://example.com\\">Success</Link>
  <Link variant=\\"warning\\" href=\\"http://example.com\\">Warning</Link>
</div>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Link",
            "documentation": Object {
              "path": "src/library/Link/Link.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Link/Link.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Link/presets/0-default.jsx",
              },
            ],
          },
          "name": "Link",
          "presets": Array [
            Object {
              "elements": Object {
                "KLYO507LR1I8BAFWJC41FRW15L9TC0XG": Object {
                  "name": "Link",
                  "props": Object {
                    "children": "Click me",
                    "href": "https://www.google.com/",
                  },
                },
              },
              "name": "default",
              "rootId": "KLYO507LR1I8BAFWJC41FRW15L9TC0XG",
            },
          ],
          "properties": Array [
            Object {
              "description": "Content of the Link",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "A URL or URL fragment to which the Link points",
              "isRequired": false,
              "name": "href",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "a",
              },
              "description": "Element to be used as the root node - e.g. \`a\` or \`ReactRouterLink\`",
              "isRequired": false,
              "name": "element",
              "type": Object {
                "name": "unsupported",
                "structure": Object {
                  "raw": "$FlowFixMe",
                },
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Menu/Menu",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Menu/Menu/Menu.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Menu/Menu/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Menu/Menu/presets/50-data driven.jsx",
              },
              Object {
                "path": "src/library/Menu/Menu/presets/100-with custom icons.jsx",
              },
            ],
          },
          "name": "Menu",
          "presets": Array [
            Object {
              "elements": Object {
                "5WCQ7AUYKJ6ZC128QSO72KH57V8725YZ": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Menu Item 1",
                  },
                },
                "67CE0I1XGJ25DJ2SKMMETBF8Z9KULMGR": Object {
                  "name": "MenuDivider",
                  "props": Object {},
                },
                "914CHOZ7UST58UST9627WECXHVJHAIT2": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Menu Item 2",
                    "secondaryText": "Secondary text",
                  },
                },
                "AOVQ6ULGRBO08ADB810R0OWEKBLP245W": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Disabled menu item",
                    "disabled": true,
                  },
                },
                "F85995B051CF1B9DAE5B74E20509B335": Object {
                  "name": "Menu",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "5WCQ7AUYKJ6ZC128QSO72KH57V8725YZ",
                      },
                      Object {
                        "uxpinPresetElementId": "914CHOZ7UST58UST9627WECXHVJHAIT2",
                      },
                      Object {
                        "uxpinPresetElementId": "ZU22SAKIOQBY5WD86WWOXECG4BB83QR4",
                      },
                    ],
                  },
                },
                "KVMDS3W7NSWU5FXFDEUBPSRAZ7URBH8W": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Danger variant",
                    "variant": "danger",
                  },
                },
                "ZU22SAKIOQBY5WD86WWOXECG4BB83QR4": Object {
                  "name": "MenuGroup",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7",
                      },
                      Object {
                        "uxpinPresetElementId": "67CE0I1XGJ25DJ2SKMMETBF8Z9KULMGR",
                      },
                      Object {
                        "uxpinPresetElementId": "KVMDS3W7NSWU5FXFDEUBPSRAZ7URBH8W",
                      },
                      Object {
                        "uxpinPresetElementId": "AOVQ6ULGRBO08ADB810R0OWEKBLP245W",
                      },
                    ],
                    "title": "Group Title",
                  },
                },
                "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "First Item in group",
                  },
                },
              },
              "name": "default",
              "rootId": "F85995B051CF1B9DAE5B74E20509B335",
            },
            Object {
              "elements": Object {
                "F85995B051CF1B9DAE5B74E20509B335": Object {
                  "name": "Menu",
                  "props": Object {
                    "data": Array [
                      Object {
                        "items": Array [
                          Object {
                            "secondaryText": "Secondary text",
                            "text": "Menu item 1",
                          },
                          Object {
                            "secondaryText": "Secondary text",
                            "text": "Menu item 2",
                          },
                        ],
                      },
                      Object {
                        "items": Array [
                          Object {
                            "secondaryText": "Secondary text",
                            "text": "Menu item 1",
                          },
                          Object {
                            "secondaryText": "Secondary text",
                            "text": "Menu item 2",
                          },
                        ],
                      },
                    ],
                  },
                },
              },
              "name": "data driven",
              "rootId": "F85995B051CF1B9DAE5B74E20509B335",
            },
            Object {
              "elements": Object {
                "5WCQ7AUYKJ6ZC128QSO72KH57V8725YZ": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Menu Item 1",
                  },
                },
                "67CE0I1XGJ25DJ2SKMMETBF8Z9KULMGR": Object {
                  "name": "MenuDivider",
                  "props": Object {},
                },
                "914CHOZ7UST58UST9627WECXHVJHAIT2": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Menu Item 2",
                  },
                },
                "CEFQWE4EMYU45HRQNVJCHX3FQ6QY8JO8": Object {
                  "name": "IconWbSunny",
                  "props": Object {},
                },
                "F85995B051CF1B9DAE5B74E20509B335": Object {
                  "name": "Menu",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "5WCQ7AUYKJ6ZC128QSO72KH57V8725YZ",
                      },
                      Object {
                        "uxpinPresetElementId": "914CHOZ7UST58UST9627WECXHVJHAIT2",
                      },
                      Object {
                        "uxpinPresetElementId": "ZU22SAKIOQBY5WD86WWOXECG4BB83QR4",
                      },
                    ],
                  },
                },
                "I2SWYA89DXXC502FF5TLKOUSLGODDXQM": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Icon at end",
                    "iconEnd": Object {
                      "uxpinPresetElementId": "CEFQWE4EMYU45HRQNVJCHX3FQ6QY8JO8",
                    },
                    "secondaryText": "Secondary text",
                  },
                },
                "KVMDS3W7NSWU5FXFDEUBPSRAZ7URBH8W": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Danger variant",
                    "variant": "danger",
                  },
                },
                "NP4Z1C9PJW9Z4J36NY6BUFI0JRFT1WCF": Object {
                  "name": "IconCloud",
                  "props": Object {},
                },
                "ZU22SAKIOQBY5WD86WWOXECG4BB83QR4": Object {
                  "name": "MenuGroup",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7",
                      },
                      Object {
                        "uxpinPresetElementId": "I2SWYA89DXXC502FF5TLKOUSLGODDXQM",
                      },
                      Object {
                        "uxpinPresetElementId": "67CE0I1XGJ25DJ2SKMMETBF8Z9KULMGR",
                      },
                      Object {
                        "uxpinPresetElementId": "KVMDS3W7NSWU5FXFDEUBPSRAZ7URBH8W",
                      },
                    ],
                    "title": "Group Title",
                  },
                },
                "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Icon at start",
                    "iconStart": Object {
                      "uxpinPresetElementId": "NP4Z1C9PJW9Z4J36NY6BUFI0JRFT1WCF",
                    },
                  },
                },
              },
              "name": "with custom icons",
              "rootId": "F85995B051CF1B9DAE5B74E20509B335",
            },
          ],
          "properties": Array [
            Object {
              "description": "[MenuDivider](/components/menu-divider),
[MenuGroup](/components/menu-group),
or [MenuItem](/components/menu-item)",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Data used to contruct Menu. See [example](#data)",
              "isRequired": false,
              "name": "data",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "shape",
                          "structure": Object {
                            "disabled": Object {
                              "name": "boolean",
                              "structure": Object {},
                            },
                            "divider": Object {
                              "name": "boolean",
                              "structure": Object {},
                            },
                            "iconEnd": Object {
                              "name": "element",
                              "structure": Object {},
                            },
                            "iconStart": Object {
                              "name": "element",
                              "structure": Object {},
                            },
                            "onClick": Object {
                              "name": "func",
                              "structure": Object {
                                "arguments": Array [
                                  Object {
                                    "name": "event",
                                    "type": Object {
                                      "name": "unsupported",
                                      "structure": Object {
                                        "raw": "SyntheticEvent",
                                      },
                                    },
                                  },
                                ],
                                "returnType": Object {
                                  "name": "empty",
                                  "structure": Object {},
                                },
                              },
                            },
                            "render": Object {
                              "name": "func",
                              "structure": Object {
                                "arguments": Array [
                                  Object {
                                    "name": "props",
                                    "type": Object {
                                      "name": "shape",
                                      "structure": Object {
                                        "props": Object {
                                          "name": "object",
                                          "structure": Object {},
                                        },
                                      },
                                    },
                                  },
                                ],
                                "returnType": Object {
                                  "name": "node",
                                  "structure": Object {},
                                },
                              },
                            },
                            "secondaryText": Object {
                              "name": "node",
                              "structure": Object {},
                            },
                            "text": Object {
                              "name": "node",
                              "structure": Object {},
                            },
                            "value": Object {
                              "name": "string",
                              "structure": Object {},
                            },
                            "variant": Object {
                              "name": "union",
                              "structure": Object {
                                "elements": Array [
                                  Object {
                                    "name": "literal",
                                    "structure": Object {
                                      "value": "danger",
                                    },
                                  },
                                  Object {
                                    "name": "literal",
                                    "structure": Object {
                                      "value": "success",
                                    },
                                  },
                                  Object {
                                    "name": "literal",
                                    "structure": Object {
                                      "value": "warning",
                                    },
                                  },
                                ],
                              },
                            },
                          },
                        },
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "shape",
                          "structure": Object {
                            "items": Object {
                              "name": "typedArray",
                              "structure": Object {
                                "memberType": Object {
                                  "name": "shape",
                                  "structure": Object {
                                    "disabled": Object {
                                      "name": "boolean",
                                      "structure": Object {},
                                    },
                                    "divider": Object {
                                      "name": "boolean",
                                      "structure": Object {},
                                    },
                                    "iconEnd": Object {
                                      "name": "element",
                                      "structure": Object {},
                                    },
                                    "iconStart": Object {
                                      "name": "element",
                                      "structure": Object {},
                                    },
                                    "onClick": Object {
                                      "name": "func",
                                      "structure": Object {
                                        "arguments": Array [
                                          Object {
                                            "name": "event",
                                            "type": Object {
                                              "name": "unsupported",
                                              "structure": Object {
                                                "raw": "SyntheticEvent",
                                              },
                                            },
                                          },
                                        ],
                                        "returnType": Object {
                                          "name": "empty",
                                          "structure": Object {},
                                        },
                                      },
                                    },
                                    "render": Object {
                                      "name": "func",
                                      "structure": Object {
                                        "arguments": Array [
                                          Object {
                                            "name": "props",
                                            "type": Object {
                                              "name": "shape",
                                              "structure": Object {
                                                "props": Object {
                                                  "name": "object",
                                                  "structure": Object {},
                                                },
                                              },
                                            },
                                          },
                                        ],
                                        "returnType": Object {
                                          "name": "node",
                                          "structure": Object {},
                                        },
                                      },
                                    },
                                    "secondaryText": Object {
                                      "name": "node",
                                      "structure": Object {},
                                    },
                                    "text": Object {
                                      "name": "node",
                                      "structure": Object {},
                                    },
                                    "value": Object {
                                      "name": "string",
                                      "structure": Object {},
                                    },
                                    "variant": Object {
                                      "name": "union",
                                      "structure": Object {
                                        "elements": Array [
                                          Object {
                                            "name": "literal",
                                            "structure": Object {
                                              "value": "danger",
                                            },
                                          },
                                          Object {
                                            "name": "literal",
                                            "structure": Object {
                                              "value": "success",
                                            },
                                          },
                                          Object {
                                            "name": "literal",
                                            "structure": Object {
                                              "value": "warning",
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  },
                                },
                              },
                            },
                            "title": Object {
                              "name": "node",
                              "structure": Object {},
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private Index of the highlighted item. Used by Dropdown and Select.",
              "isRequired": false,
              "name": "highlightedIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Provides custom rendering control for the items. See the
[custom item example](/components/menu#custom-item) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "item",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "shape",
                        "structure": Object {
                          "props": Object {
                            "name": "object",
                            "structure": Object {},
                          },
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Specifies a key in the item data that gives an item its unique identity.
See the [React docs](https://reactjs.org/docs/lists-and-keys.html#keys).",
              "isRequired": false,
              "name": "itemKey",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Menu/MenuDivider",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Menu/MenuDivider/MenuDivider.js",
            },
            "presets": Array [],
          },
          "name": "MenuDivider",
          "presets": Array [],
          "properties": Array [],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Menu/MenuGroup",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Menu/MenuGroup/MenuGroup.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Menu/MenuGroup/presets/0-default.jsx",
              },
            ],
          },
          "name": "MenuGroup",
          "presets": Array [
            Object {
              "elements": Object {
                "67CE0I1XGJ25DJ2SKMMETBF8Z9KULMGR": Object {
                  "name": "MenuDivider",
                  "props": Object {},
                },
                "AOVQ6ULGRBO08ADB810R0OWEKBLP245W": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Disabled menu item",
                    "disabled": true,
                  },
                },
                "KVMDS3W7NSWU5FXFDEUBPSRAZ7URBH8W": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Danger variant",
                    "variant": "danger",
                  },
                },
                "ZU22SAKIOQBY5WD86WWOXECG4BB83QR4": Object {
                  "name": "MenuGroup",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7",
                      },
                      Object {
                        "uxpinPresetElementId": "67CE0I1XGJ25DJ2SKMMETBF8Z9KULMGR",
                      },
                      Object {
                        "uxpinPresetElementId": "KVMDS3W7NSWU5FXFDEUBPSRAZ7URBH8W",
                      },
                      Object {
                        "uxpinPresetElementId": "AOVQ6ULGRBO08ADB810R0OWEKBLP245W",
                      },
                    ],
                  },
                },
                "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "First Item in group",
                  },
                },
              },
              "name": "default",
              "rootId": "ZU22SAKIOQBY5WD86WWOXECG4BB83QR4",
            },
          ],
          "properties": Array [
            Object {
              "description": "[MenuItems](/components/menu-item)",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Title for the group",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Menu/MenuItem",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Menu/MenuItem/MenuItem.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Menu/MenuItem/presets/0-default.jsx",
              },
            ],
          },
          "name": "MenuItem",
          "presets": Array [
            Object {
              "elements": Object {
                "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7": Object {
                  "name": "MenuItem",
                  "props": Object {
                    "children": "Menu Item Name",
                  },
                },
              },
              "name": "default",
              "rootId": "ZVZAEWUMZ8DGEX54X1BRDXF9SHMZ5FY7",
            },
          ],
          "properties": Array [
            Object {
              "description": "Rendered content of the component",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disable the menu item",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Icon that goes after the children",
              "isRequired": false,
              "name": "iconEnd",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "Icon that goes before the children",
              "isRequired": false,
              "name": "iconStart",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "Item index - provided to render callback",
              "isRequired": false,
              "name": "index",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Display the item in an active style",
              "isRequired": false,
              "name": "isHighlighted",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Item data - provided to render callback",
              "isRequired": false,
              "name": "item",
              "type": Object {
                "name": "unsupported",
                "structure": Object {
                  "raw": "Item",
                },
              },
            },
            Object {
              "description": "Called with the click event",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Provides custom rendering control. See the
[custom item example](/components/menu#custom-item) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "render",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "shape",
                        "structure": Object {
                          "props": Object {
                            "name": "object",
                            "structure": Object {},
                          },
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Secondary text",
              "isRequired": false,
              "name": "secondaryText",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<div>
  <Popover
    content={<span>Some content</span>}
    placement=\\"right\\"
    subtitle=\\"Subtitle\\"
    title=\\"Title\\"
    isOpen>
    <Button>Open Popover</Button>
  </Popover>
</div>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Popover",
            "documentation": Object {
              "path": "src/library/Popover/Popover.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Popover/Popover.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Popover/presets/0-default.jsx",
              },
            ],
          },
          "name": "Popover",
          "presets": Array [
            Object {
              "elements": Object {
                "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R": Object {
                  "name": "Popover",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "Y6EEY8JC96RZZ0ZJ7R3P7B80Q93WBIR3",
                      },
                    ],
                    "content": Object {
                      "uxpinPresetElementId": "RQDQUVHEPJVDUX2WRMM6AUOAE0VRZR8M",
                    },
                    "isOpen": true,
                    "subtitle": "Subtitle",
                    "title": "Title",
                  },
                },
                "RQDQUVHEPJVDUX2WRMM6AUOAE0VRZR8M": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.",
                  },
                },
                "Y6EEY8JC96RZZ0ZJ7R3P7B80Q93WBIR3": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Open Popover",
                  },
                },
              },
              "name": "default",
              "rootId": "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R",
            },
          ],
          "properties": Array [
            Object {
              "description": "Trigger for the Popover. Optionally provides custom rendering control.
See the [custom trigger example](/components/popover#custom-trigger)
and our [render props guide](/render-props).",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "node",
                      "structure": Object {},
                    },
                    Object {
                      "name": "func",
                      "structure": Object {
                        "arguments": Array [
                          Object {
                            "name": "props",
                            "type": Object {
                              "name": "unsupported",
                              "structure": Object {
                                "raw": "intersection",
                              },
                            },
                          },
                        ],
                        "returnType": Object {
                          "name": "node",
                          "structure": Object {},
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Content of the Popover. Optionally provides custom rendering control.
See the [custom content example](/components/popover#custom-content)
and our [render props guide](/render-props).",
              "isRequired": true,
              "name": "content",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "$FlowFixMe",
                      },
                    },
                    Object {
                      "name": "func",
                      "structure": Object {
                        "arguments": Array [
                          Object {
                            "name": "props",
                            "type": Object {
                              "name": "unsupported",
                              "structure": Object {
                                "raw": "intersection",
                              },
                            },
                          },
                        ],
                        "returnType": Object {
                          "name": "node",
                          "structure": Object {},
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private Cursor applied when hovering the popover trigger; accepts any
[valid CSS value](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor)",
              "isRequired": false,
              "name": "cursor",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Open the Popover upon initialization. Primarily for use with uncontrolled
components.",
              "isRequired": false,
              "name": "defaultIsOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the Popover",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": true,
              },
              "description": "Determines whether focus will be set to the trigger when the Popover is
closed.",
              "isRequired": false,
              "name": "focusTriggerOnClose",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": true,
              },
              "description": "Include an arrow on the Popover content pointing to the trigger",
              "isRequired": false,
              "name": "hasArrow",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of the Popover",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Determines whether the Popover is open. For use with controlled components.",
              "isRequired": false,
              "name": "isOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Plugins that are used to alter behavior. See
[PopperJS docs](https://popper.js.org/popper-documentation.html#modifiers)
for options.",
              "isRequired": false,
              "name": "modifiers",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Called when Popover is closed",
              "isRequired": false,
              "name": "onClose",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when Popover is opened",
              "isRequired": false,
              "name": "onOpen",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "bottom",
              },
              "description": "Placement of the Popover",
              "isRequired": false,
              "name": "placement",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "auto",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "auto-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "auto-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-start",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Subtitle displayed under the title",
              "isRequired": false,
              "name": "subtitle",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Title of the Popover",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private ref for the Popover trigger",
              "isRequired": false,
              "name": "triggerRef",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "node",
                      "type": Object {
                        "name": "element",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Use a Portal to render the Popover to the body rather than as a sibling to
the trigger",
              "isRequired": false,
              "name": "usePortal",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Radio/Radio",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Radio/Radio/Radio.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Radio/Radio/presets/0-default.jsx",
              },
            ],
          },
          "name": "Radio",
          "presets": Array [
            Object {
              "elements": Object {
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Radio",
                  "props": Object {
                    "defaultChecked": true,
                    "label": "Quartz",
                    "name": "minerals",
                    "value": "quartz",
                  },
                },
              },
              "name": "default",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
          ],
          "properties": Array [
            Object {
              "description": "Checked state of the radio button. Primarily for use with controlled
components. If this prop is specified, an \`onChange\` handler must also be
specified. See also: \`defaultChecked\`.",
              "isRequired": false,
              "name": "checked",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private CSS className",
              "isRequired": false,
              "name": "className",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Initial checked state of the radio button; primarily for use with
uncontrolled components",
              "isRequired": false,
              "name": "defaultChecked",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the radio button",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Visually hide label, but keep available for [assistive technologies](https://webaccess.berkeley.edu/resources/assistive-technology)",
              "isRequired": false,
              "name": "hideLabel",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Ref for the radio button",
              "isRequired": false,
              "name": "inputRef",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "node",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "HTMLInputElement",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Indicates that the value of the input is invalid",
              "isRequired": false,
              "name": "invalid",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Maximize the distance between the label and the control",
              "isRequired": false,
              "name": "justify",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Label associated with the input element",
              "isRequired": true,
              "name": "label",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "end",
              },
              "description": "Determines the position of the label relative to the control",
              "isRequired": false,
              "name": "labelPosition",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Used to uniquely define a group of radio buttons",
              "isRequired": false,
              "name": "name",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Function called when a radio button is selected",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticInputEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Indicates that the user must select an option before submitting a form",
              "isRequired": false,
              "name": "required",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Props to be applied directly to the root element rather than the input",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "large",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "The value of the radio button",
              "isRequired": false,
              "name": "value",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Radio/RadioGroup",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Radio/RadioGroup/RadioGroup.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Radio/RadioGroup/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Radio/RadioGroup/presets/50-controlled with data object.jsx",
              },
            ],
          },
          "name": "RadioGroup",
          "presets": Array [
            Object {
              "elements": Object {
                "0YDENGD0Q6VGDXJK3N1C0EFN2GHHDFSU": Object {
                  "name": "RadioGroup",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
                      },
                      Object {
                        "uxpinPresetElementId": "9BZANYTUTRX8FFZIOATGB0ABIPYYLKTD",
                      },
                      Object {
                        "uxpinPresetElementId": "25742CUEE2H85OM1XY9XYWQ1QUE12QUA",
                      },
                    ],
                    "name": "minerals-1",
                  },
                },
                "25742CUEE2H85OM1XY9XYWQ1QUE12QUA": Object {
                  "name": "Radio",
                  "props": Object {
                    "label": "Pyrite",
                    "value": "pyrite",
                  },
                },
                "9BZANYTUTRX8FFZIOATGB0ABIPYYLKTD": Object {
                  "name": "Radio",
                  "props": Object {
                    "label": "Hematite",
                    "value": "hematite",
                  },
                },
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Radio",
                  "props": Object {
                    "label": "Azurite",
                    "value": "azurite",
                  },
                },
              },
              "name": "default",
              "rootId": "0YDENGD0Q6VGDXJK3N1C0EFN2GHHDFSU",
            },
            Object {
              "elements": Object {
                "HT9WU09S0XSJNWKDZPE1CFVVH11FXRDC": Object {
                  "name": "RadioGroup",
                  "props": Object {
                    "data": Array [
                      Object {
                        "label": "Fluorite",
                        "value": "fluorite",
                      },
                      Object {
                        "label": "Magnetite",
                        "value": "magnetite",
                      },
                      Object {
                        "label": "Quartz",
                        "value": "quartz",
                      },
                    ],
                    "defaultChecked": "quartz",
                    "name": "minerals-2",
                  },
                },
              },
              "name": "controlled with data object",
              "rootId": "HT9WU09S0XSJNWKDZPE1CFVVH11FXRDC",
            },
          ],
          "properties": Array [
            Object {
              "description": "Value of the selected [Radio](/components/radio); primarily for use with controlled
components. If this prop is specified, an \`onChange\` handler must also be
specified. See also: \`defaultChecked\`.",
              "isRequired": false,
              "name": "checked",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Mineral [Radio](/components/radio) components",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Data used to contruct [Radio](/components/radio), see [example](#data)",
              "isRequired": false,
              "name": "data",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "shape",
                    "structure": Object {
                      "label": Object {
                        "name": "union",
                        "structure": Object {
                          "elements": Array [
                            Object {
                              "name": "string",
                              "structure": Object {},
                            },
                            Object {
                              "name": "element",
                              "structure": Object {},
                            },
                          ],
                        },
                      },
                      "value": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                    },
                  },
                },
              },
            },
            Object {
              "description": "Value of the selected [Radio](/components/radio); primarily for use with
uncontrolled components.",
              "isRequired": false,
              "name": "defaultChecked",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Display the choices inline horizontally rather than stacked vertically.",
              "isRequired": false,
              "name": "inline",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "The name of the group",
              "isRequired": true,
              "name": "name",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Function called when a choice is selected",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Props to be applied directly to the root element",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "import Pagination from 'mineral-ui/Pagination';",
              },
              Object {
                "code": "() => {
  class Paginated extends Component {
    constructor(props) {
      super(props);

      this.state = {
        currentPage: 1
      };

      this.handlePageChange = this.handlePageChange.bind(this);
    }

    handlePageChange(currentPage) {
      this.setState({ currentPage });
    }

    render() {
      const { currentPage } = this.state;

      return (
        <Pagination
          currentPage={currentPage}
          onPageChange={this.handlePageChange}
          pageSize={10}
          totalCount={100}
        />
      );
    }
  }

  return <Paginated />;
}",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Pagination",
            "documentation": Object {
              "path": "src/library/Pagination/Pagination.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Pagination/Pagination.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Pagination/presets/0-default.jsx",
              },
            ],
          },
          "name": "Pagination",
          "presets": Array [
            Object {
              "elements": Object {
                "4FF2529F73C5705D246A68986904647D": Object {
                  "name": "Pagination",
                  "props": Object {
                    "currentPage": 1,
                    "pageSize": 10,
                    "size": "small",
                    "totalCount": 30,
                  },
                },
              },
              "name": "default",
              "rootId": "4FF2529F73C5705D246A68986904647D",
            },
          ],
          "properties": Array [
            Object {
              "description": "The currently displayed page",
              "isRequired": true,
              "name": "currentPage",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": true,
              },
              "description": "Hide the page number buttons",
              "isRequired": false,
              "name": "showPageNumbers",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": Object {
                  "category": "rows",
                  "label": "Pagination",
                  "pageJumper": Object {
                    "label": "Jump to page",
                    "placeholder": "Page #",
                  },
                  "pageSizer": Object {},
                  "pages": Object {
                    "next": "Next",
                    "previous": "Previous",
                  },
                },
              },
              "description": "Various messages and labels used by Pagination
([see example for more details](#rtl))",
              "isRequired": false,
              "name": "messages",
              "type": Object {
                "name": "shape",
                "structure": Object {
                  "category": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "label": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "pageJumper": Object {
                    "name": "shape",
                    "structure": Object {
                      "label": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                      "placeholder": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                    },
                  },
                  "pageSizer": Object {
                    "name": "shape",
                    "structure": Object {
                      "itemText": Object {
                        "name": "func",
                        "structure": Object {
                          "arguments": Array [
                            Object {
                              "name": "pageSize",
                              "type": Object {
                                "name": "number",
                                "structure": Object {},
                              },
                            },
                          ],
                          "returnType": Object {
                            "name": "string",
                            "structure": Object {},
                          },
                        },
                      },
                      "status": Object {
                        "name": "func",
                        "structure": Object {
                          "arguments": Array [
                            Object {
                              "name": "category",
                              "type": Object {
                                "name": "string",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "first",
                              "type": Object {
                                "name": "number",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "last",
                              "type": Object {
                                "name": "number",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "total",
                              "type": Object {
                                "name": "number",
                                "structure": Object {},
                              },
                            },
                          ],
                          "returnType": Object {
                            "name": "string",
                            "structure": Object {},
                          },
                        },
                      },
                    },
                  },
                  "pages": Object {
                    "name": "shape",
                    "structure": Object {
                      "next": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                      "pageLabel": Object {
                        "name": "func",
                        "structure": Object {
                          "arguments": Array [
                            Object {
                              "name": "isCurrentPage",
                              "type": Object {
                                "name": "boolean",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "isLastPage",
                              "type": Object {
                                "name": "boolean",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "page",
                              "type": Object {
                                "name": "number",
                                "structure": Object {},
                              },
                            },
                          ],
                          "returnType": Object {
                            "name": "string",
                            "structure": Object {},
                          },
                        },
                      },
                      "previous": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                    },
                  },
                },
              },
            },
            Object {
              "description": "Called when current page is changed",
              "isRequired": true,
              "name": "onPageChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "currentPage",
                      "type": Object {
                        "name": "number",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when [page size](#page-sizer) is changed",
              "isRequired": false,
              "name": "onPageSizeChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "pageSize",
                      "type": Object {
                        "name": "number",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Render a [page jumper](#page-jumper)
([TextInput component](/components/text-input)); enables the user to change
the current page on number entry",
              "isRequired": false,
              "name": "showPageJumper",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "The number of items or data to be rendered on each page",
              "isRequired": true,
              "name": "pageSize",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Render a [page sizer](#page-sizer)
([Select component](/components/select)); enables the user to select the
page size",
              "isRequired": false,
              "name": "showPageSizer",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": Array [
                  10,
                  20,
                  50,
                ],
              },
              "description": "A collection of possible page sizes for a user to select from; implemented
in [page sizer](#page-sizer). Be sure to provide unique values.",
              "isRequired": false,
              "name": "pageSizes",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "number",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "medium",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private",
              "isRequired": true,
              "name": "theme",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "The total number of items or data to be paginated",
              "isRequired": true,
              "name": "totalCount",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": 5,
              },
              "description": "The number of consecutive pages to be displayed when the paginated results
are truncated ([see example for details](#visible-range))",
              "isRequired": false,
              "name": "visibleRange",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Select",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Select/Select.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Select/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Select/presets/50-with icons.jsx",
              },
            ],
          },
          "name": "Select",
          "presets": Array [
            Object {
              "elements": Object {
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Select",
                  "props": Object {
                    "data": Array [
                      Object {
                        "secondaryText": "Secondary text",
                        "text": "Select item",
                        "value": "basic",
                      },
                      Object {
                        "divider": true,
                      },
                      Object {
                        "text": "Danger variant",
                        "value": "variant",
                        "variant": "danger",
                      },
                      Object {
                        "disabled": true,
                        "text": "Disabled menu item",
                        "value": "disabled",
                      },
                    ],
                  },
                },
              },
              "name": "default",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
            Object {
              "elements": Object {
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Select",
                  "props": Object {
                    "data": Array [
                      Object {
                        "secondaryText": "Secondary text",
                        "text": "Select item",
                        "value": "basic",
                      },
                      Object {
                        "divider": true,
                      },
                      Object {
                        "text": "Icon at start",
                        "value": "iconStart",
                      },
                      Object {
                        "text": "Icon at end",
                        "value": "iconEnd",
                      },
                    ],
                  },
                },
              },
              "name": "with icons",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
          ],
          "properties": Array [
            Object {
              "description": "Data from which the [Menu](/components/menu#data) will be constructed
(see [example](#data))",
              "isRequired": true,
              "name": "data",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "Items",
                      },
                    },
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "ItemGroups",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Index of item to be highlighted upon initialization. Primarily for
use with uncontrolled components.",
              "isRequired": false,
              "name": "defaultHighlightedIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Open the Select upon initialization. Primarily for use with uncontrolled
components.",
              "isRequired": false,
              "name": "defaultIsOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Item selected upon initialization. Primarily for use with uncontrolled
components.",
              "isRequired": false,
              "name": "defaultSelectedItem",
              "type": Object {
                "name": "unsupported",
                "structure": Object {
                  "raw": "Item",
                },
              },
            },
            Object {
              "description": "Disables the control",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Index of the highlighted item. For use with controlled components.",
              "isRequired": false,
              "name": "highlightedIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of the Select",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates that the value of the element is invalid",
              "isRequired": false,
              "name": "invalid",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Determines whether the Select is open. For use with controlled components.",
              "isRequired": false,
              "name": "isOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Provides custom rendering control for the items. See the
[custom item example](/components/select#custom-item) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "item",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "intersection",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "value",
              },
              "description": "Specifies a key in the item data that gives an item its unique identity. See
the [React docs](https://reactjs.org/docs/lists-and-keys.html#keys).",
              "isRequired": false,
              "name": "itemKey",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Provides custom rendering control for the menu. See the
[custom menu example](/components/select#custom-menu) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "menu",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "intersection",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Plugins that are used to alter behavior. See
[PopperJS docs](https://popper.js.org/popper-documentation.html#modifiers)
for options.",
              "isRequired": false,
              "name": "modifiers",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Name of the field when submitted in a form",
              "isRequired": false,
              "name": "name",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Called when an item is selected and it is different than the previously
selected item.",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "item",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "Item",
                        },
                      },
                    },
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when Select is closed",
              "isRequired": false,
              "name": "onClose",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when Select is opened",
              "isRequired": false,
              "name": "onOpen",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when an item is selected",
              "isRequired": false,
              "name": "onSelect",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "item",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "Item",
                        },
                      },
                    },
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "Select...",
              },
              "description": "Text displayed when there is no item selected",
              "isRequired": false,
              "name": "placeholder",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "bottom-start",
              },
              "description": "Placement of the Select menu",
              "isRequired": false,
              "name": "placement",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-start",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Indicates that the user cannot modify the value of the control",
              "isRequired": false,
              "name": "readOnly",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates that the user must select a value before submitting a form",
              "isRequired": false,
              "name": "required",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "The selected item. For use with controlled components.",
              "isRequired": false,
              "name": "selectedItem",
              "type": Object {
                "name": "unsupported",
                "structure": Object {
                  "raw": "Item",
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "large",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Provides custom rendering control for the trigger. See the
[custom trigger example](/components/select#custom-trigger) and
our [render props guide](/render-props).",
              "isRequired": false,
              "name": "trigger",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "props",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "intersection",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "node",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Ref for the trigger",
              "isRequired": false,
              "name": "triggerRef",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "node",
                      "type": Object {
                        "name": "element",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Use a Portal to render the Select menu to the body rather than as a sibling
to the trigger",
              "isRequired": false,
              "name": "usePortal",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Text",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Text/Text.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Text/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Text/presets/50-with inline icon.jsx",
              },
              Object {
                "path": "src/library/Text/presets/100-with-formating.jsx",
              },
            ],
          },
          "name": "Text",
          "presets": Array [
            Object {
              "elements": Object {
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non purus id dolor maximus eleifend nec in nunc. Integer quis lacinia leo, in suscipit orci. Donec enim augue, vehicula vel enim a, vestibulum tempus nunc.",
                  },
                },
              },
              "name": "default",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
            Object {
              "elements": Object {
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Text",
                  "props": Object {
                    "children": Array [
                      "Lorem ipsum",
                      Object {
                        "uxpinPresetElementId": "ZRL6QZCWKOYDKMLSN1GK7I5PAAD43IM6",
                      },
                      "dolor sit amet, consectetur adipiscing elit. Sed non purus id dolor maximus eleifend nec in nunc. Integer quis lacinia leo, in suscipit orci. Donec enim augue, vehicula vel enim a, vestibulum tempus nunc.",
                    ],
                  },
                },
                "ZRL6QZCWKOYDKMLSN1GK7I5PAAD43IM6": Object {
                  "name": "IconCloud",
                  "props": Object {},
                },
              },
              "name": "with inline icon",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
            Object {
              "elements": Object {
                "5QNQV48AUD4VQKAG0PWEEF9BSKU55UAR": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "consectetur",
                    "element": "strong",
                  },
                },
                "E2FHJ7T5CNDOKC408FMZNVJSH06NQB5D": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Integer",
                    "element": "span",
                    "fontWeight": 300,
                  },
                },
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "Text",
                  "props": Object {
                    "children": Array [
                      "Lorem ipsum dolor sit amet,",
                      Object {
                        "uxpinPresetElementId": "5QNQV48AUD4VQKAG0PWEEF9BSKU55UAR",
                      },
                      "adipiscing elit. Sed non purus id dolor maximus eleifend nec in nunc.",
                      Object {
                        "uxpinPresetElementId": "E2FHJ7T5CNDOKC408FMZNVJSH06NQB5D",
                      },
                    ],
                  },
                },
              },
              "name": "with-formating",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
          ],
          "properties": Array [
            Object {
              "description": "Available horizontal alignments",
              "isRequired": false,
              "name": "align",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "center",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "justify",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "p",
              },
              "description": "Available styles",
              "isRequired": false,
              "name": "appearance",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h1",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h2",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h3",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h4",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h5",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h6",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "mouse",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "p",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "prose",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Rendered content",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Color of text",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "p",
              },
              "description": "The rendered HTML element, e.g. \`'span'\`, \`'strong'\`",
              "isRequired": false,
              "name": "element",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available font weights",
              "isRequired": false,
              "name": "fontWeight",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "regular",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "semiBold",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bold",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "extraBold",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Inherit all styles from parent",
              "isRequired": false,
              "name": "inherit",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Remove top & bottom margins",
              "isRequired": false,
              "name": "noMargins",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private See use of context",
              "isRequired": false,
              "name": "parentElement",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Force display to one line and truncate with ellipsis at given max-width",
              "isRequired": false,
              "name": "truncate",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "import Table from 'mineral-ui/Table';",
              },
              Object {
                "code": "() => {
  const data = [
    {
      Fruits: 'Pomello',
      Vegetables: 'Bok Choi',
      Grains: 'Chia',
      Dairy: 'Pule',
      Protein: 'Crickets'
    },
    {
      Fruits: 'Starfruit',
      Vegetables: 'Romanesco',
      Grains: 'Sorghum',
      Dairy: 'Casu marzu',
      Protein: 'Barnacles'
    },
    {
      Fruits: 'Durian',
      Vegetables: 'Ramps',
      Grains: 'Teff',
      Dairy: 'Vieux Lille',
      Protein: 'Inca nuts'
    },
    {
      Fruits: 'Persimmons',
      Vegetables: 'Fiddleheads',
      Grains: 'Quinoa',
      Dairy: 'Milbenkase',
      Protein: 'Spirulina'
    }
  ];

  return <Table
           data={data}
           rowKey=\\"Fruits\\"
           title=\\"Foods of the World\\"
           hideTitle />;
}",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Table",
            "documentation": Object {
              "path": "src/library/Table/Table.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Table/Table.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Table/presets/0-default.jsx",
              },
            ],
          },
          "name": "Table",
          "presets": Array [
            Object {
              "elements": Object {
                "681489D4F626B3171ED12CD98CDD2CB5": Object {
                  "name": "Table",
                  "props": Object {
                    "data": Array [
                      Object {
                        "Dairy": "Pule",
                        "Fruits": "Pomello",
                        "Grains": "Chia",
                        "Protein": "Crickets",
                        "Vegetables": "Bok Choi",
                      },
                      Object {
                        "Dairy": "Casu marzu",
                        "Fruits": "Starfruit",
                        "Grains": "Sorghum",
                        "Protein": "Barnacles",
                        "Vegetables": "Romanesco",
                      },
                      Object {
                        "Dairy": "Vieux Lille",
                        "Fruits": "Durian",
                        "Grains": "Teff",
                        "Protein": "Inca nuts",
                        "Vegetables": "Ramps",
                      },
                      Object {
                        "Dairy": "Milbenkase",
                        "Fruits": "Persimmons",
                        "Grains": "Quinoa",
                        "Protein": "Spirulina",
                        "Vegetables": "Fiddleheads",
                      },
                    ],
                    "hideTitle": true,
                    "rowKey": "Fruits",
                    "title": "Foods of the World",
                  },
                },
              },
              "name": "default",
              "rootId": "681489D4F626B3171ED12CD98CDD2CB5",
            },
          ],
          "properties": Array [
            Object {
              "description": "Column definitions ([see Column type for details](#Column-type))",
              "isRequired": false,
              "name": "columns",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "shape",
                    "structure": Object {
                      "cell": Object {
                        "name": "func",
                        "structure": Object {
                          "arguments": Array [
                            Object {
                              "name": "props",
                              "type": Object {
                                "name": "shape",
                                "structure": Object {
                                  "helpers": Object {
                                    "name": "object",
                                    "structure": Object {},
                                  },
                                  "props": Object {
                                    "name": "object",
                                    "structure": Object {},
                                  },
                                  "state": Object {
                                    "name": "object",
                                    "structure": Object {},
                                  },
                                },
                              },
                            },
                          ],
                          "returnType": Object {
                            "name": "node",
                            "structure": Object {},
                          },
                        },
                      },
                      "content": Object {
                        "name": "node",
                        "structure": Object {},
                      },
                      "headerCell": Object {
                        "name": "func",
                        "structure": Object {
                          "arguments": Array [
                            Object {
                              "name": "props",
                              "type": Object {
                                "name": "shape",
                                "structure": Object {
                                  "helpers": Object {
                                    "name": "object",
                                    "structure": Object {},
                                  },
                                  "props": Object {
                                    "name": "object",
                                    "structure": Object {},
                                  },
                                  "state": Object {
                                    "name": "object",
                                    "structure": Object {},
                                  },
                                },
                              },
                            },
                          ],
                          "returnType": Object {
                            "name": "node",
                            "structure": Object {},
                          },
                        },
                      },
                      "key": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                      "label": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                      "maxWidth": Object {
                        "name": "union",
                        "structure": Object {
                          "elements": Array [
                            Object {
                              "name": "number",
                              "structure": Object {},
                            },
                            Object {
                              "name": "string",
                              "structure": Object {},
                            },
                          ],
                        },
                      },
                      "minWidth": Object {
                        "name": "union",
                        "structure": Object {
                          "elements": Array [
                            Object {
                              "name": "number",
                              "structure": Object {},
                            },
                            Object {
                              "name": "string",
                              "structure": Object {},
                            },
                          ],
                        },
                      },
                      "primary": Object {
                        "name": "boolean",
                        "structure": Object {},
                      },
                      "sortComparator": Object {
                        "name": "func",
                        "structure": Object {
                          "arguments": Array [
                            Object {
                              "name": "a",
                              "type": Object {
                                "name": "object",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "b",
                              "type": Object {
                                "name": "object",
                                "structure": Object {},
                              },
                            },
                            Object {
                              "name": "key",
                              "type": Object {
                                "name": "string",
                                "structure": Object {},
                              },
                            },
                          ],
                          "returnType": Object {
                            "name": "union",
                            "structure": Object {
                              "elements": Array [
                                Object {
                                  "name": "literal",
                                  "structure": Object {
                                    "value": -1,
                                  },
                                },
                                Object {
                                  "name": "literal",
                                  "structure": Object {
                                    "value": 1,
                                  },
                                },
                                Object {
                                  "name": "literal",
                                  "structure": Object {
                                    "value": 0,
                                  },
                                },
                              ],
                            },
                          },
                        },
                      },
                      "sortable": Object {
                        "name": "boolean",
                        "structure": Object {},
                      },
                      "textAlign": Object {
                        "name": "union",
                        "structure": Object {
                          "elements": Array [
                            Object {
                              "name": "literal",
                              "structure": Object {
                                "value": "start",
                              },
                            },
                            Object {
                              "name": "literal",
                              "structure": Object {
                                "value": "end",
                              },
                            },
                            Object {
                              "name": "literal",
                              "structure": Object {
                                "value": "center",
                              },
                            },
                            Object {
                              "name": "literal",
                              "structure": Object {
                                "value": "justify",
                              },
                            },
                          ],
                        },
                      },
                      "width": Object {
                        "name": "union",
                        "structure": Object {
                          "elements": Array [
                            Object {
                              "name": "number",
                              "structure": Object {},
                            },
                            Object {
                              "name": "string",
                              "structure": Object {},
                            },
                          ],
                        },
                      },
                    },
                  },
                },
              },
            },
            Object {
              "description": "Row data ([see example for more details](#basic))",
              "isRequired": true,
              "name": "data",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "object",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Initially selected rows when \`selectable = true\`. Primarily for use with uncontrolled components.",
              "isRequired": false,
              "name": "defaultSelectedRows",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "object",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Initially sorted column & direction. Primarily for use with uncontrolled components.",
              "isRequired": false,
              "name": "defaultSort",
              "type": Object {
                "name": "shape",
                "structure": Object {
                  "descending": Object {
                    "name": "boolean",
                    "structure": Object {},
                  },
                  "key": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "compact",
              },
              "description": "Amount of vertical space in Table's cells",
              "isRequired": false,
              "name": "density",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "compact",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "spacious",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Visually hide Table's header, but keep available for [assistive technologies](https://webaccess.berkeley.edu/resources/assistive-technology)",
              "isRequired": false,
              "name": "hideHeader",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Visually hide Table's title, but keep available for [assistive technologies](https://webaccess.berkeley.edu/resources/assistive-technology)",
              "isRequired": false,
              "name": "hideTitle",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Render Table with high-contrast styles",
              "isRequired": false,
              "name": "highContrast",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": Object {
                  "deselectAllRows": "Deselect all rows",
                  "deselectRow": "Deselect row",
                  "selectAllRows": "Select all rows",
                  "selectRow": "Select row",
                  "selectedRows": "Selected rows",
                  "sortColumnAscending": "Sort column in ascending order",
                  "sortColumnDescending": "Sort column in descending order",
                },
              },
              "description": "Various messages and labels used by Table
([see example for more details](#rtl))",
              "isRequired": false,
              "name": "messages",
              "type": Object {
                "name": "shape",
                "structure": Object {
                  "deselectAllRows": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "deselectRow": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "selectAllRows": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "selectRow": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "selectedRows": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "sortColumnAscending": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                  "sortColumnDescending": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when data is sorted",
              "isRequired": false,
              "name": "onSort",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "sort",
                      "type": Object {
                        "name": "shape",
                        "structure": Object {
                          "descending": Object {
                            "name": "boolean",
                            "structure": Object {},
                          },
                          "key": Object {
                            "name": "string",
                            "structure": Object {},
                          },
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when all rows are selected/deselected",
              "isRequired": false,
              "name": "onToggleAllRows",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "rows",
                      "type": Object {
                        "name": "typedArray",
                        "structure": Object {
                          "memberType": Object {
                            "name": "object",
                            "structure": Object {},
                          },
                        },
                      },
                    },
                    Object {
                      "name": "selected",
                      "type": Object {
                        "name": "boolean",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when a single row is selected/deselected",
              "isRequired": false,
              "name": "onToggleRow",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "row",
                      "type": Object {
                        "name": "object",
                        "structure": Object {},
                      },
                    },
                    Object {
                      "name": "selected",
                      "type": Object {
                        "name": "boolean",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Specifies a key in the row data that gives a row its unique identity.
See the [React docs](https://reactjs.org/docs/lists-and-keys.html#keys).",
              "isRequired": false,
              "name": "rowKey",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Determines the scrolling behavior when Table's width exceeds that of its
container",
              "isRequired": false,
              "name": "scrollable",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Enable the user to select rows. Prepends a column for checkboxes to your
Table.",
              "isRequired": false,
              "name": "selectable",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Selected rows when \`selectable = true\`. Primarily for use with controlled
components.",
              "isRequired": false,
              "name": "selectedRows",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "object",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Sorted column & direction",
              "isRequired": false,
              "name": "sort",
              "type": Object {
                "name": "shape",
                "structure": Object {
                  "descending": Object {
                    "name": "boolean",
                    "structure": Object {},
                  },
                  "key": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Enable the user to sort all columns",
              "isRequired": false,
              "name": "sortable",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "The [sort comparator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)
used by sortable columns",
              "isRequired": false,
              "name": "sortComparator",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "a",
                      "type": Object {
                        "name": "object",
                        "structure": Object {},
                      },
                    },
                    Object {
                      "name": "b",
                      "type": Object {
                        "name": "object",
                        "structure": Object {},
                      },
                    },
                    Object {
                      "name": "key",
                      "type": Object {
                        "name": "string",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "union",
                    "structure": Object {
                      "elements": Array [
                        Object {
                          "name": "literal",
                          "structure": Object {
                            "value": -1,
                          },
                        },
                        Object {
                          "name": "literal",
                          "structure": Object {
                            "value": 0,
                          },
                        },
                        Object {
                          "name": "literal",
                          "structure": Object {
                            "value": 1,
                          },
                        },
                      ],
                    },
                  },
                },
              },
            },
            Object {
              "description": "Renders Table with alternating row stripes",
              "isRequired": false,
              "name": "striped",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Title for Table",
              "isRequired": true,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available title styles (see [Text](/components/text))",
              "isRequired": false,
              "name": "titleAppearance",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h1",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h2",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h3",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h4",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h5",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h6",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "h4",
              },
              "description": "Available title elements (see [Text](/components/text))",
              "isRequired": false,
              "name": "titleElement",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h1",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h2",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h3",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h4",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h5",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "h6",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "import Tabs, { Tab } from 'mineral-ui/Tabs';",
              },
              Object {
                "code": "<Tabs defaultSelectedTabIndex={1} label=\\"Minerals\\" height=\\"7.75em\\">
  <Tab title=\\"Malachite\\">
    <Text>{content.malachite}</Text>
  </Tab>
  <Tab title=\\"Fluorite\\">
    <Text>{content.fluorite}</Text>
  </Tab>
  <Tab title=\\"Magnetite\\">
    <Text>{content.magnetite}</Text>
  </Tab>
</Tabs>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Tabs/Tabs",
            "documentation": Object {
              "path": "src/library/Tabs/Tabs/Tabs.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Tabs/Tabs/Tabs.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Tabs/Tabs/presets/0-default.jsx",
              },
            ],
          },
          "name": "Tabs",
          "presets": Array [
            Object {
              "elements": Object {
                "1CA6D97F5C771BD1CB33A0B795ED474F": Object {
                  "name": "Tabs",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "510D5829F949591440EB0B70818332F2",
                      },
                      Object {
                        "uxpinPresetElementId": "514B71671F6E88F2C795207F59C3FAE5",
                      },
                      Object {
                        "uxpinPresetElementId": "96063D6EEFD20D41D2A811A80B690609",
                      },
                    ],
                  },
                },
                "4DC6E64AE06656A88F2D7AD65A66F243": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Magnetite is a rock mineral and one of the main iron ores, with the chemical formula Fe3O4. It is one of the oxides of iron, and is ferrimagnetic; it is attracted to a magnet and can be magnetized to become a permanent magnet itself. It is the most magnetic of all the naturally-occurring minerals on Earth. Naturally-magnetized pieces of magnetite, called lodestone, will attract small pieces of iron, which is how ancient peoples first discovered the property of magnetism. Today it is mined as iron ore. Small grains of magnetite occur in almost all igneous and metamorphic rocks.",
                  },
                },
                "510D5829F949591440EB0B70818332F2": Object {
                  "name": "Tab",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "9CE95E14FAF457BDD077D1AFF88A9B23",
                      },
                    ],
                    "title": "Malachite",
                  },
                },
                "514B71671F6E88F2C795207F59C3FAE5": Object {
                  "name": "Tab",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "8ABB6532D3FCE9993579D926A4452A61",
                      },
                    ],
                    "maxWidth": "6em",
                    "title": "Fluorite Will Truncate",
                  },
                },
                "8ABB6532D3FCE9993579D926A4452A61": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Fluorite (also called fluorspar) is the mineral form of calcium fluoride, CaF2. It belongs to the halide minerals. It crystallizes in isometric cubic habit, although octahedral and more complex isometric forms are not uncommon. The Mohs scale of mineral hardness, based on scratch hardness comparison, defines value 4 as Fluorite. Fluorite is a colorful mineral, both in visible and ultraviolet light, and the stone has ornamental and lapidary uses. Industrially, fluorite is used as a flux for smelting, and in the production of certain glasses and enamels. The purest grades of fluorite are a source of fluoride for hydrofluoric acid manufacture, which is the intermediate source of most fluorine-containing fine chemicals.",
                  },
                },
                "96063D6EEFD20D41D2A811A80B690609": Object {
                  "name": "Tab",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "4DC6E64AE06656A88F2D7AD65A66F243",
                      },
                    ],
                    "title": "Magnetite",
                  },
                },
                "9CE95E14FAF457BDD077D1AFF88A9B23": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Malachite is a copper carbonate hydroxide mineral, with the formula Cu2CO3(OH)2. This opaque, green banded mineral crystallizes in the monoclinic crystal system, and most often forms botryoidal, fibrous, or stalagmitic masses, in fractures and spaces, deep underground, where the water table and hydrothermal fluids provide the means for chemical precipitation.",
                  },
                },
              },
              "name": "default",
              "rootId": "1CA6D97F5C771BD1CB33A0B795ED474F",
            },
          ],
          "properties": Array [
            Object {
              "defaultValue": Object {
                "value": "start",
              },
              "description": "Horizontal or vertical alignment of Tabs in the tab list",
              "isRequired": false,
              "name": "align",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "center",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "justify",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private",
              "isRequired": false,
              "name": "aria-labelledby",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Content of Tabs; must be Tab components",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Index of the selected Tab; primarily for use with uncontrolled components",
              "isRequired": false,
              "name": "defaultSelectedTabIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of Tabs",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Accessible label for Tabs",
              "isRequired": true,
              "name": "label",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Height of Tabs",
              "isRequired": false,
              "name": "height",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "8.5em",
              },
              "description": "Maximum width of each Tab",
              "isRequired": false,
              "name": "maxTabWidth",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Called when a Tab is selected",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "selectedTabIndex",
                      "type": Object {
                        "name": "number",
                        "structure": Object {},
                      },
                    },
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "top",
              },
              "description": "Position of the tab list in relation to the tab panel",
              "isRequired": false,
              "name": "position",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Index of the selected Tab; primarily for use with controlled components.
If this prop is specified, an \`onChange\` handler must also be specified.
See also: \`defaultSelectedTabIndex\`",
              "isRequired": false,
              "name": "selectedTabIndex",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private Theme",
              "isRequired": true,
              "name": "theme",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "import Tabs, { Tab } from 'mineral-ui/Tabs';",
              },
              Object {
                "code": "<Tabs defaultSelectedTabIndex={1} label=\\"Minerals\\" height=\\"7.75em\\">
  <Tab title=\\"Malachite\\">
    <Text>{content.malachite}</Text>
  </Tab>
  <Tab title=\\"Fluorite\\">
    <Text>{content.fluorite}</Text>
  </Tab>
  <Tab title=\\"Magnetite\\">
    <Text>{content.magnetite}</Text>
  </Tab>
</Tabs>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Tabs/Tab",
            "documentation": Object {
              "path": "src/library/Tabs/Tab/Tab.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Tabs/Tab/Tab.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Tabs/Tab/presets/0-default.jsx",
              },
            ],
          },
          "name": "Tab",
          "presets": Array [
            Object {
              "elements": Object {
                "90A8771ED300567F18983C4F2D5BDD57": Object {
                  "name": "Tab",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "E13D2EF56E3668952D093A80EA398F81",
                      },
                    ],
                    "title": "Malachite",
                  },
                },
                "E13D2EF56E3668952D093A80EA398F81": Object {
                  "name": "Text",
                  "props": Object {
                    "children": "Malachite is a copper carbonate hydroxide mineral, with the formula Cu2CO3(OH)2. This opaque, green banded mineral crystallizes in the monoclinic crystal system, and most often forms botryoidal, fibrous, or stalagmitic masses, in fractures and spaces, deep underground, where the water table and hydrothermal fluids provide the means for chemical precipitation.",
                  },
                },
              },
              "name": "default",
              "rootId": "90A8771ED300567F18983C4F2D5BDD57",
            },
          ],
          "properties": Array [
            Object {
              "description": "Content of the tab panel",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables Tab",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Icon placed before the title",
              "isRequired": false,
              "name": "icon",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of Tab",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private Index of Tab",
              "isRequired": false,
              "name": "index",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Maximum width of Tab",
              "isRequired": false,
              "name": "maxWidth",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private Id of the tab panel",
              "isRequired": false,
              "name": "panelId",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private Selected state of Tab",
              "isRequired": false,
              "name": "selected",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Tab title",
              "isRequired": true,
              "name": "title",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/TextArea",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/TextArea/TextArea.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/TextArea/presets/0-default.jsx",
              },
            ],
          },
          "name": "TextArea",
          "presets": Array [
            Object {
              "elements": Object {
                "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R": Object {
                  "name": "TextArea",
                  "props": Object {
                    "defaultValue": "Hello World",
                  },
                },
              },
              "name": "default",
              "rootId": "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R",
            },
          ],
          "properties": Array [
            Object {
              "description": "Automatically adjust the height of the input to fit the content",
              "isRequired": false,
              "name": "autoSize",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private CSS className",
              "isRequired": false,
              "name": "className",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Initial value of the input. Primarily for use with uncontrolled components",
              "isRequired": false,
              "name": "defaultValue",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the input",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "ref for the input",
              "isRequired": false,
              "name": "inputRef",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "node",
                      "type": Object {
                        "name": "element",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Props to be applied directly to the root element, rather than the input",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates that the value of the element is invalid",
              "isRequired": false,
              "name": "invalid",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private Used internally in conjunction with autoSize prop. Must also
support a custom function.",
              "isRequired": false,
              "name": "onInput",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Function called when input value changes",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Indicates that the user cannot modify the value of the input",
              "isRequired": false,
              "name": "readOnly",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates that the user must fill in a value before submitting a form",
              "isRequired": false,
              "name": "required",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates whether input is resizable. _Not currently supported in IE/Edge._",
              "isRequired": false,
              "name": "resizeable",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "The number of visible text lines in the input",
              "isRequired": false,
              "name": "rows",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "The initial value of the input. Primarily for use with controlled
components.  If this prop is specified, an onChange handler must also be
specified.  Also see \`defaultValue\`.",
              "isRequired": false,
              "name": "value",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<TextInput defaultValue=\\"Hello World\\" />",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/TextInput",
            "documentation": Object {
              "path": "src/library/TextInput/TextInput.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/TextInput/TextInput.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/TextInput/presets/0-default.jsx",
              },
            ],
          },
          "name": "TextInput",
          "presets": Array [
            Object {
              "elements": Object {
                "AF11C384BDFF8ABB8AC5ED99554F61B9": Object {
                  "name": "TextInput",
                  "props": Object {
                    "defaultValue": "Hello World",
                  },
                },
              },
              "name": "default",
              "rootId": "AF11C384BDFF8ABB8AC5ED99554F61B9",
            },
          ],
          "properties": Array [
            Object {
              "description": "@Private CSS className",
              "isRequired": false,
              "name": "className",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Initial value of the input. Primarily for use with uncontrolled components",
              "isRequired": false,
              "name": "defaultValue",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the input",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "HTML \`size\` attribute",
              "isRequired": false,
              "name": "htmlSize",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Icon located at the start of the input",
              "isRequired": false,
              "name": "iconStart",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "Icon located at the end of the input",
              "isRequired": false,
              "name": "iconEnd",
              "type": Object {
                "name": "element",
                "structure": Object {},
              },
            },
            Object {
              "description": "ref for the input",
              "isRequired": false,
              "name": "inputRef",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "node",
                      "type": Object {
                        "name": "element",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Props to be applied directly to the root element, rather than the input",
              "isRequired": false,
              "name": "rootProps",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates that the value of the element is invalid",
              "isRequired": false,
              "name": "invalid",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Function called when input value changes",
              "isRequired": false,
              "name": "onChange",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Text to display before input value",
              "isRequired": false,
              "name": "prefix",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Indicates that the user cannot modify the value of the input",
              "isRequired": false,
              "name": "readOnly",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Indicates that the user must fill in a value before submitting a form",
              "isRequired": false,
              "name": "required",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "large",
              },
              "description": "Available sizes",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "jumbo",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Text to display after input value",
              "isRequired": false,
              "name": "suffix",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "text",
              },
              "description": "Type of input. Not all types are equally supported across browsers.",
              "isRequired": false,
              "name": "type",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "date",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "datetime-local",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "email",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "month",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "number",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "password",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "search",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "tel",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "text",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "time",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "url",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "week",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "The initial value of the input. Primarily for use with controlled
components.  If this prop is specified, an onChange handler must also be
specified.  Also see \`defaultValue\`.",
              "isRequired": false,
              "name": "value",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Tooltip",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Tooltip/Tooltip.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Tooltip/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Tooltip/presets/50-in-prose.jsx",
              },
            ],
          },
          "name": "Tooltip",
          "presets": Array [
            Object {
              "elements": Object {
                "HUAO1YCR4ENVNG97PX9CLIIS7QU94I5S": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Action",
                  },
                },
                "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R": Object {
                  "name": "Tooltip",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "HUAO1YCR4ENVNG97PX9CLIIS7QU94I5S",
                      },
                    ],
                    "content": "Tooltip contents",
                  },
                },
              },
              "name": "default",
              "rootId": "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R",
            },
            Object {
              "elements": Object {
                "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R": Object {
                  "name": "Tooltip",
                  "props": Object {
                    "children": "Tooltip",
                    "content": "Light years star stuff",
                    "isOpen": true,
                    "usePortal": true,
                  },
                },
                "MODG7BEJSWVEO19E3JCIU8T9VQO3CRXL": Object {
                  "name": "Text",
                  "props": Object {
                    "children": Array [
                      "Here's some prose with a ",
                      Object {
                        "uxpinPresetElementId": "IUR6EPRYZLA2XRUHSS2SN9BQLGV2429R",
                      },
                      " in the middle of it.",
                    ],
                  },
                },
              },
              "name": "in-prose",
              "rootId": "MODG7BEJSWVEO19E3JCIU8T9VQO3CRXL",
            },
          ],
          "properties": Array [
            Object {
              "description": "Trigger for the Tooltip",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Cursor applied when hovering the tooltip trigger; accepts any
[valid CSS value](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor)",
              "isRequired": false,
              "name": "cursor",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Content of the Tooltip",
              "isRequired": true,
              "name": "content",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Open the Tooltip upon initialization. Primarily for use with uncontrolled
components.",
              "isRequired": false,
              "name": "defaultIsOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Disables the Tooltip",
              "isRequired": false,
              "name": "disabled",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": true,
              },
              "description": "Include an arrow on the Tooltip content pointing to the trigger",
              "isRequired": false,
              "name": "hasArrow",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Id of the Tooltip",
              "isRequired": false,
              "name": "id",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Determines whether the Tooltip is open. For use with controlled components.",
              "isRequired": false,
              "name": "isOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Plugins that are used to alter behavior. See
[PopperJS docs](https://popper.js.org/popper-documentation.html#modifiers)
for options.",
              "isRequired": false,
              "name": "modifiers",
              "type": Object {
                "name": "object",
                "structure": Object {},
              },
            },
            Object {
              "description": "Called when Tooltip is closed",
              "isRequired": false,
              "name": "onClose",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Called when Tooltip is opened",
              "isRequired": false,
              "name": "onOpen",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Placement of the Tooltip",
              "isRequired": false,
              "name": "placement",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "auto",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "auto-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "auto-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "bottom-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "left-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "right-start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "top-start",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private Tooltips should not have subtitles and will be removed",
              "isRequired": false,
              "name": "subtitle",
              "type": Object {
                "name": "any",
                "structure": Object {},
              },
            },
            Object {
              "description": "@Private Tooltips should not have titles and will be removed",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "any",
                "structure": Object {},
              },
            },
            Object {
              "description": "Use a Portal to render the Tooltip to the body rather than as a sibling
to the trigger.",
              "isRequired": false,
              "name": "usePortal",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "General",
    },
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/Card",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/Card/Card.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/Card/presets/0-default.jsx",
              },
            ],
          },
          "name": "Card",
          "presets": Array [
            Object {
              "elements": Object {
                "77XCO8EASMVIM7H8KF7OY57YU0Q90EMH": Object {
                  "name": "CardActions",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "9XI3KDGOF0H05837DAG2M9EUUUQIMAO3",
                      },
                    ],
                  },
                },
                "9XI3KDGOF0H05837DAG2M9EUUUQIMAO3": Object {
                  "name": "Link",
                  "props": Object {
                    "children": "Read more",
                    "href": "http://example.com",
                  },
                },
                "OFOK2ZKES405DYHFSHQ28OM9WSKA8APM": Object {
                  "name": "Card",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "YT1AHFK6AXX16PA90UCP4M8UBPYMOG52",
                      },
                      Object {
                        "uxpinPresetElementId": "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0",
                      },
                      Object {
                        "uxpinPresetElementId": "77XCO8EASMVIM7H8KF7OY57YU0Q90EMH",
                      },
                    ],
                  },
                },
                "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0": Object {
                  "name": "CardBlock",
                  "props": Object {
                    "children": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec mattis pretium massa. Aliquam erat volutpat. Nulla facilisi.",
                  },
                },
                "YT1AHFK6AXX16PA90UCP4M8UBPYMOG52": Object {
                  "name": "CardTitle",
                  "props": Object {
                    "children": "Card Title",
                  },
                },
              },
              "name": "default",
              "rootId": "OFOK2ZKES405DYHFSHQ28OM9WSKA8APM",
            },
          ],
          "properties": Array [
            Object {
              "description": "Content of Card; see the [Basic](#basic) example for more details",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Called with the click event",
              "isRequired": false,
              "name": "onClick",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardActions",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardActions/CardActions.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardActions/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Card/CardActions/presets/100-with-icon.jsx",
              },
            ],
          },
          "name": "CardActions",
          "presets": Array [
            Object {
              "elements": Object {
                "2SUHVXZXHDX8S8BBQMFAWXQ6SZPKPCCM": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Primary action",
                    "primary": true,
                  },
                },
                "77XCO8EASMVIM7H8KF7OY57YU0Q90EMH": Object {
                  "name": "CardActions",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "9XI3KDGOF0H05837DAG2M9EUUUQIMAO3",
                      },
                      Object {
                        "uxpinPresetElementId": "2SUHVXZXHDX8S8BBQMFAWXQ6SZPKPCCM",
                      },
                    ],
                  },
                },
                "9XI3KDGOF0H05837DAG2M9EUUUQIMAO3": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Secondary action",
                    "minimal": true,
                  },
                },
              },
              "name": "default",
              "rootId": "77XCO8EASMVIM7H8KF7OY57YU0Q90EMH",
            },
            Object {
              "elements": Object {
                "2SUHVXZXHDX8S8BBQMFAWXQ6SZPKPCCM": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Primary action",
                    "primary": true,
                  },
                },
                "77XCO8EASMVIM7H8KF7OY57YU0Q90EMH": Object {
                  "name": "CardActions",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "9XI3KDGOF0H05837DAG2M9EUUUQIMAO3",
                      },
                      Object {
                        "uxpinPresetElementId": "2SUHVXZXHDX8S8BBQMFAWXQ6SZPKPCCM",
                      },
                      Object {
                        "uxpinPresetElementId": "9G1JWCM5J271V0D9A6Z5M2A4EY58UUSC",
                      },
                    ],
                  },
                },
                "9G1JWCM5J271V0D9A6Z5M2A4EY58UUSC": Object {
                  "name": "IconCloud",
                  "props": Object {},
                },
                "9XI3KDGOF0H05837DAG2M9EUUUQIMAO3": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Secondary action",
                    "minimal": true,
                  },
                },
              },
              "name": "with-icon",
              "rootId": "77XCO8EASMVIM7H8KF7OY57YU0Q90EMH",
            },
          ],
          "properties": Array [
            Object {
              "description": "Actions associated with Card; see [Button](/components/button), [Link](/components/link)",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardBlock",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardBlock/CardBlock.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardBlock/presets/0-default.jsx",
              },
            ],
          },
          "name": "CardBlock",
          "presets": Array [
            Object {
              "elements": Object {
                "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0": Object {
                  "name": "CardBlock",
                  "props": Object {
                    "children": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec mattis pretium massa. Aliquam erat volutpat. Nulla facilisi.",
                  },
                },
              },
              "name": "default",
              "rootId": "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0",
            },
          ],
          "properties": Array [
            Object {
              "description": "Contents of CardBlock",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardDivider",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardDivider/CardDivider.js",
            },
            "presets": Array [],
          },
          "name": "CardDivider",
          "presets": Array [],
          "properties": Array [],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardFooter",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardFooter/CardFooter.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardFooter/presets/0-default.jsx",
              },
            ],
          },
          "name": "CardFooter",
          "presets": Array [
            Object {
              "elements": Object {
                "791X7S1AMCT4S9CYT7JTG16JMQAQ666I": Object {
                  "name": "CardActions",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "SCGMAS5M2NJ0TY51HEF9JMO6REP1UF09",
                      },
                      Object {
                        "uxpinPresetElementId": "DCFUSH8VLNCRVVNEPTAEEBTDNC8HUTNJ",
                      },
                    ],
                  },
                },
                "DCFUSH8VLNCRVVNEPTAEEBTDNC8HUTNJ": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Button 2",
                    "primary": true,
                  },
                },
                "HRHMIQBTFTTJJH8LPE6XM77ANG2TRV31": Object {
                  "name": "CardBlock",
                  "props": Object {
                    "children": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec mattis pretium massa. Aliquam erat volutpat. Nulla facilisi.",
                  },
                },
                "NH4JFP2A69U6GHFL7YLIMI9EZIM72IZR": Object {
                  "name": "CardFooter",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "HRHMIQBTFTTJJH8LPE6XM77ANG2TRV31",
                      },
                      Object {
                        "uxpinPresetElementId": "791X7S1AMCT4S9CYT7JTG16JMQAQ666I",
                      },
                    ],
                    "defaultIsOpen": true,
                    "expandable": true,
                    "title": "Card Footer Title",
                  },
                },
                "SCGMAS5M2NJ0TY51HEF9JMO6REP1UF09": Object {
                  "name": "Button",
                  "props": Object {
                    "children": "Button 1",
                    "minimal": true,
                  },
                },
              },
              "name": "default",
              "rootId": "NH4JFP2A69U6GHFL7YLIMI9EZIM72IZR",
            },
          ],
          "properties": Array [
            Object {
              "description": "Content of CardFooter",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "If \`expandable\`, expand CardFooter immediately upon initialization",
              "isRequired": false,
              "name": "defaultIsOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Display a trigger to expand/collapse CardFooter contents (\`title\` is required for this feature)",
              "isRequired": false,
              "name": "expandable",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "For use with controlled components, in which the app manages CardFooter state",
              "isRequired": false,
              "name": "isOpen",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "If \`expandable\`, called when CardFooter is collapsed",
              "isRequired": false,
              "name": "onClose",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "If \`expandable\`, called when CardFooter is expanded",
              "isRequired": false,
              "name": "onOpen",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "event",
                      "type": Object {
                        "name": "unsupported",
                        "structure": Object {
                          "raw": "SyntheticEvent",
                        },
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "empty",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Title of the footer",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "If \`expandable\`, title for expand/collapse trigger",
              "isRequired": false,
              "name": "triggerTitle",
              "type": Object {
                "name": "func",
                "structure": Object {
                  "arguments": Array [
                    Object {
                      "name": "isOpen",
                      "type": Object {
                        "name": "boolean",
                        "structure": Object {},
                      },
                    },
                  ],
                  "returnType": Object {
                    "name": "string",
                    "structure": Object {},
                  },
                },
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardImage",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardImage/CardImage.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardImage/presets/0-default.jsx",
              },
            ],
          },
          "name": "CardImage",
          "presets": Array [
            Object {
              "elements": Object {
                "NH4JFP2A69U6GHFL7YLIMI9EZIM72IZR": Object {
                  "name": "CardImage",
                  "props": Object {
                    "alt": "Random photo",
                    "src": "https://picsum.photos/1000/562/?image=871",
                  },
                },
              },
              "name": "default",
              "rootId": "NH4JFP2A69U6GHFL7YLIMI9EZIM72IZR",
            },
          ],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": true,
              "name": "src",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": true,
              "name": "alt",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardStatus",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardStatus/CardStatus.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardStatus/presets/0-default.jsx",
              },
            ],
          },
          "name": "CardStatus",
          "presets": Array [
            Object {
              "elements": Object {
                "1HYO5HMRE3M0G7ZECDNZRSJBI95NPV2D": Object {
                  "name": "CardStatus",
                  "props": Object {
                    "children": "Available",
                    "variant": "success",
                  },
                },
              },
              "name": "default",
              "rootId": "1HYO5HMRE3M0G7ZECDNZRSJBI95NPV2D",
            },
          ],
          "properties": Array [
            Object {
              "description": "Status text",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": true,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardTitle",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardTitle/CardTitle.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardTitle/presets/0-default.jsx",
              },
              Object {
                "path": "src/library/Card/CardTitle/presets/50-title with menu.jsx",
              },
            ],
          },
          "name": "CardTitle",
          "presets": Array [
            Object {
              "elements": Object {
                "VQ0Z5S02EDHJFHP55YLJR4LFP4WBUMOK": Object {
                  "name": "CardTitle",
                  "props": Object {
                    "children": "Card Title",
                    "subtitle": "Card Subtitle",
                  },
                },
              },
              "name": "default",
              "rootId": "VQ0Z5S02EDHJFHP55YLJR4LFP4WBUMOK",
            },
            Object {
              "elements": Object {
                "NH4JFP2A69U6GHFL7YLIMI9EZIM72IZR": Object {
                  "name": "CardTitleMenu",
                  "props": Object {
                    "data": Array [
                      Object {
                        "items": Array [
                          Object {
                            "onClick": "() => { console.log('Clicked 1') }",
                            "text": "MenuItem 1",
                          },
                          Object {
                            "onClick": "() => { console.log('Clicked 2') }",
                            "text": "MenuItem 2",
                          },
                          Object {
                            "divider": true,
                          },
                          Object {
                            "onClick": "() => { console.log('Clicked 3') }",
                            "text": "MenuItem 3",
                          },
                        ],
                      },
                    ],
                  },
                },
                "VQ0Z5S02EDHJFHP55YLJR4LFP4WBUMOK": Object {
                  "name": "CardTitle",
                  "props": Object {
                    "actions": Object {
                      "uxpinPresetElementId": "NH4JFP2A69U6GHFL7YLIMI9EZIM72IZR",
                    },
                    "children": "Card Title",
                  },
                },
              },
              "name": "title with menu",
              "rootId": "VQ0Z5S02EDHJFHP55YLJR4LFP4WBUMOK",
            },
          ],
          "properties": Array [
            Object {
              "description": "See the [Actions Menu](#actions-menu) example (will take precedence over \`secondaryText\`)",
              "isRequired": false,
              "name": "actions",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Avatar image displayed beside the title",
              "isRequired": false,
              "name": "avatar",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Title of Card",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Information displayed beside the title (\`actions\` will take precedence over this)",
              "isRequired": false,
              "name": "secondaryText",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "element",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Subtitle displayed under the title",
              "isRequired": false,
              "name": "subtitle",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Available variants",
              "isRequired": false,
              "name": "variant",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "danger",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "success",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "warning",
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Card/CardTitleMenu",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Card/CardTitleMenu/CardTitleMenu.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Card/CardTitleMenu/presets/0-default.jsx",
              },
            ],
          },
          "name": "CardTitleMenu",
          "presets": Array [
            Object {
              "elements": Object {
                "QATTOR6N3QK74G14MFCTCWGEA7MWM0KA": Object {
                  "name": "CardTitleMenu",
                  "props": Object {
                    "data": Array [
                      Object {
                        "items": Array [
                          Object {
                            "onClick": "() => { console.log('Clicked 1') }",
                            "text": "MenuItem 1",
                          },
                          Object {
                            "onClick": "() => { console.log('Clicked 2') }",
                            "text": "MenuItem 2",
                          },
                          Object {
                            "divider": true,
                          },
                          Object {
                            "onClick": "() => { console.log('Clicked 3') }",
                            "text": "MenuItem 3",
                          },
                        ],
                      },
                    ],
                  },
                },
              },
              "name": "default",
              "rootId": "QATTOR6N3QK74G14MFCTCWGEA7MWM0KA",
            },
          ],
          "properties": Array [
            Object {
              "description": "See the [Actions Menu](#actions-menu) example",
              "isRequired": false,
              "name": "data",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "Items",
                      },
                    },
                    Object {
                      "name": "unsupported",
                      "structure": Object {
                        "raw": "ItemGroups",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "Card actions",
              },
              "description": "Title for the actions menu [Icon](/components/Icon)",
              "isRequired": false,
              "name": "triggerTitle",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "Card",
    },
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/Icon.js",
            },
            "presets": Array [],
          },
          "name": "Icon",
          "presets": Array [],
          "properties": Array [
            Object {
              "defaultValue": Object {
                "value": "medium",
              },
              "description": "Available sizes, including custom - e.g. '5em' or '20px'",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "description": "SVG content, required for the generic Icon component",
              "isRequired": false,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Fill color",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Flip the Icon horizontally when used with RTL languages",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "Alternative text",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconArrowDropdownDown.js",
            },
            "presets": Array [],
          },
          "name": "IconArrowDropdownDown",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconArrowDropdownUp.js",
            },
            "presets": Array [],
          },
          "name": "IconArrowDropdownUp",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconCheckBoxCheck.js",
            },
            "presets": Array [],
          },
          "name": "IconCheckBoxCheck",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconCheckBoxIndeterminate.js",
            },
            "presets": Array [],
          },
          "name": "IconCheckBoxIndeterminate",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconChevronLeft.js",
            },
            "presets": Array [],
          },
          "name": "IconChevronLeft",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconChevronRight.js",
            },
            "presets": Array [],
          },
          "name": "IconChevronRight",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconClose.js",
            },
            "presets": Array [],
          },
          "name": "IconClose",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconDanger.js",
            },
            "presets": Array [],
          },
          "name": "IconDanger",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconDangerSimple.js",
            },
            "presets": Array [],
          },
          "name": "IconDangerSimple",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconExpandLess.js",
            },
            "presets": Array [],
          },
          "name": "IconExpandLess",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconExpandMore.js",
            },
            "presets": Array [],
          },
          "name": "IconExpandMore",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconMoreHoriz.js",
            },
            "presets": Array [],
          },
          "name": "IconMoreHoriz",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconRadioButtonCheck.js",
            },
            "presets": Array [],
          },
          "name": "IconRadioButtonCheck",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconSuccess.js",
            },
            "presets": Array [],
          },
          "name": "IconSuccess",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconSuccessSimple.js",
            },
            "presets": Array [],
          },
          "name": "IconSuccessSimple",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconWarning.js",
            },
            "presets": Array [],
          },
          "name": "IconWarning",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [
              Object {
                "code": "<Icon size=\\"7em\\" title=\\"CA Technologies\\">
  <svg viewBox=\\"0 0 16 16\\">
    <path
      className=\\"trademark\\"
      d=\\"M14.514 10.187c-0.256 0-0.419-0.186-0.419-0.442s0.186-0.442 0.419-0.442c0.256 0 0.419 0.186 0.419 0.442 0 0.279-0.163 0.442-0.419 0.442zM14.514 9.373c-0.209 0-0.372 0.14-0.372 0.395s0.163 0.372 0.372 0.372c0.209 0 0.372-0.14 0.372-0.372 0-0.256-0.163-0.395-0.372-0.395zM14.653 9.977l-0.14-0.209h-0.070v0.209h-0.093v-0.489h0.14c0.093 0 0.163 0.047 0.163 0.14 0 0.070-0.047 0.116-0.093 0.14l0.14 0.186-0.047 0.023zM14.514 9.582h-0.070v0.14h0.070c0.047 0 0.093-0.023 0.093-0.070s-0.023-0.070-0.093-0.070z\\"
    />
    <g className=\\"technologies\\">
      <path d=\\"M0.788 12.187v-0.465h0.349v0.465h0.279v0.279h-0.279v0.814c0 0.070 0.047 0.093 0.116 0.093 0.047 0 0.116-0.023 0.163-0.023v0.279c-0.093 0-0.186 0.023-0.279 0.023-0.256 0-0.349-0.116-0.349-0.326v-0.861h-0.186v-0.279h0.186z\\" />
      <path d=\\"M1.905 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.861zM2.44 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M3.859 12.653c-0.047-0.116-0.116-0.209-0.279-0.209-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.14 0 0.233-0.093 0.302-0.233l0.256 0.14c-0.14 0.256-0.302 0.349-0.558 0.349-0.395 0-0.605-0.279-0.605-0.744s0.233-0.744 0.605-0.744c0.279 0 0.489 0.14 0.558 0.372l-0.279 0.14z\\" />
      <path d=\\"M4.394 13.607v-1.977h0.349v0.698c0.093-0.093 0.233-0.186 0.419-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.326z\\" />
      <path d=\\"M5.906 13.607v-1.442h0.302v0.163c0.116-0.093 0.279-0.186 0.442-0.186 0.279 0 0.419 0.186 0.419 0.489v0.977h-0.349v-0.931c0-0.186-0.070-0.256-0.186-0.256-0.14 0-0.256 0.093-0.326 0.163v1.024h-0.302z\\" />
      <path d=\\"M7.953 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM7.953 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M8.837 13.607v-1.977h0.349v1.977z\\" />
      <path d=\\"M10.070 12.164c0.395 0 0.628 0.279 0.628 0.744s-0.233 0.744-0.628 0.744c-0.395 0-0.628-0.279-0.628-0.744s0.233-0.744 0.628-0.744zM10.070 12.443c-0.186 0-0.279 0.14-0.279 0.465s0.093 0.465 0.279 0.465c0.186 0 0.279-0.14 0.279-0.465s-0.093-0.465-0.279-0.465z\\" />
      <path d=\\"M12.094 12.397c-0.070 0-0.163 0-0.209 0.023 0.047 0.070 0.070 0.14 0.070 0.256 0 0.279-0.186 0.465-0.535 0.465-0.14 0-0.256 0-0.256 0.093 0 0.233 0.931-0.093 0.931 0.489 0 0.209-0.209 0.419-0.651 0.419-0.372 0-0.628-0.116-0.628-0.349 0-0.186 0.14-0.256 0.256-0.256v0c-0.070-0.047-0.209-0.070-0.209-0.233 0-0.14 0.163-0.233 0.209-0.256-0.116-0.093-0.209-0.209-0.209-0.372 0-0.256 0.186-0.489 0.558-0.489 0.116 0 0.256 0.047 0.349 0.116 0.070-0.093 0.163-0.14 0.326-0.116v0.209zM11.094 13.746c0 0.116 0.093 0.163 0.372 0.163 0.209 0 0.302-0.116 0.302-0.163 0-0.070-0.093-0.163-0.419-0.163-0.209 0-0.256 0.116-0.256 0.163zM11.396 12.42c-0.14 0-0.256 0.093-0.256 0.233s0.093 0.233 0.256 0.233c0.14 0 0.233-0.116 0.233-0.233 0-0.14-0.093-0.233-0.233-0.233z\\" />
      <path d=\\"M12.327 11.932v-0.326h0.349v0.326h-0.349zM12.676 13.188v0.419h-0.349v-1.442h0.349v1.024z\\" />
      <path d=\\"M13.281 12.955c0 0.302 0.14 0.419 0.302 0.419s0.233-0.070 0.326-0.163l0.256 0.163c-0.14 0.209-0.326 0.302-0.605 0.302-0.372 0-0.605-0.279-0.605-0.744s0.233-0.744 0.628-0.744c0.372 0 0.582 0.326 0.582 0.651v0.116h-0.884zM13.816 12.722c0-0.209-0.116-0.302-0.279-0.302s-0.279 0.116-0.279 0.302h0.558z\\" />
      <path d=\\"M15.119 12.56c-0.070-0.070-0.163-0.14-0.256-0.14-0.14 0-0.186 0.047-0.186 0.14 0 0.256 0.721 0.14 0.721 0.675 0 0.302-0.233 0.419-0.512 0.419-0.233 0-0.419-0.093-0.535-0.279l0.233-0.163c0.070 0.116 0.186 0.209 0.326 0.209 0.116 0 0.209-0.070 0.209-0.163 0-0.233-0.721-0.163-0.721-0.651 0-0.256 0.233-0.419 0.465-0.419 0.186 0 0.372 0.070 0.512 0.209l-0.256 0.163z\\" />
    </g>
    <g className=\\"ca\\">
      <path d=\\"M10.838 8.14c-0.279 0.419-0.698 0.675-1.186 0.675-0.651 0-1.21-0.302-1.21-1.024 0-1.047 1.535-1.419 2.722-1.489v0.302c0 0.698 0 1.047-0.326 1.535zM8.651 4.348c0.186-0.489 0.651-0.675 1.303-0.675 0.931 0 1.186 0.651 1.21 1.186v0.256c-2.559 0.116-4.955 0.605-4.909 2.931 0.023 1.628 1.512 2.303 2.536 2.303 1.186 0 1.838-0.326 2.489-1.117 0 0.349 0.047 0.698 0.116 0.954h2.28c-0.116-0.395-0.163-0.814-0.163-1.21v-4.257c0-1.024-0.186-1.605-0.744-2.117-0.535-0.489-1.373-0.744-2.536-0.744-1.070 0-1.977 0.233-2.652 0.698v0c0.558 0.465 0.931 1.070 1.070 1.791v0z\\" />
      <path d=\\"M6.116 7.953c0 0.047 0 0.093 0 0.14 0 0.023 0 0.047 0 0.070 0.047 0.837 0.442 1.349 0.814 1.652-0.628 0.372-1.396 0.512-2.070 0.512-2.443 0.023-3.908-1.721-3.908-4.141 0-2.512 1.512-4.327 4.071-4.327 1.861 0 3.396 1 3.559 2.931h-2.233c0-0.744-0.512-1.117-1.233-1.117-1.163 0-1.512 0.814-1.512 2.326 0 1.535 0.326 2.419 1.512 2.419 0.442 0 0.791-0.14 1-0.465v0z\\" />
    </g>
  </svg>
</Icon>",
              },
            ],
          },
          "info": Object {
            "dirPath": "src/library/Icon",
            "documentation": Object {
              "path": "src/library/Icon/Icon.md",
            },
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Icon/IconWarningSimple.js",
            },
            "presets": Array [],
          },
          "name": "IconWarningSimple",
          "presets": Array [],
          "properties": Array [
            Object {
              "description": "",
              "isRequired": false,
              "name": "size",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "small",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "medium",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "large",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "color",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "rtl",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "description": "",
              "isRequired": false,
              "name": "title",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "Icons",
    },
    Object {
      "components": Array [
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Box",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Box/Box.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Box/presets/0-default.jsx",
              },
            ],
          },
          "name": "Box",
          "presets": Array [
            Object {
              "elements": Object {
                "0CC175b9C0F1B6A831C399E269772661": Object {
                  "name": "Box",
                  "props": Object {
                    "children": "Put Box contents here",
                  },
                },
              },
              "name": "default",
              "rootId": "0CC175b9C0F1B6A831C399E269772661",
            },
          ],
          "properties": Array [
            Object {
              "description": "Media query (min-width) breakpoints along which to apply props marked
\\"&#xfeff;[[Responsive-capable]](#responsive)&#xfeff;\\"",
              "isRequired": false,
              "name": "breakpoints",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "union",
                    "structure": Object {
                      "elements": Array [
                        Object {
                          "name": "number",
                          "structure": Object {},
                        },
                        Object {
                          "name": "string",
                          "structure": Object {},
                        },
                      ],
                    },
                  },
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "div",
              },
              "description": "Rendered root HTML element",
              "isRequired": false,
              "name": "element",
              "type": Object {
                "name": "string",
                "structure": Object {},
              },
            },
            Object {
              "description": "Sets the box height. [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "height",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Renders Box as an inline-block [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "inline",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "boolean",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a margin on all sides [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "margin",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a bottom margin [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginBottom",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a right margin when the language is left-to-right and left margin
[for RTL languages](#rtl) [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginEnd",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies left & right margins [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginHorizontal",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a left margin [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginLeft",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a right margin [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginRight",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a left margin when the language is left-to-right and right margin
[for RTL languages](#rtl) [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginStart",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies a top margin [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginTop",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies top & bottom margins [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "marginVertical",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies padding to all sides [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "padding",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies bottom padding [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "paddingBottom",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies right padding when the language is left-to-right and left padding
[for RTL languages](#rtl) [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "padddingEnd",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies left & right padding [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "paddingHorizontal",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies left padding [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "paddingLeft",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies right padding [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "paddingRight",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies left padding when the language is left-to-right and right padding
[for RTL languages](#rtl) [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "padddingStart",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies bottom padding [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "paddingTop",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Applies top & bottom margins [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "paddingVertical",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xs",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "sm",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "md",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "lg",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xl",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "xxl",
                                },
                              },
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Sets the box width [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "width",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "string",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Flex/Flex",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Flex/Flex/Flex.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Flex/Flex/presets/0-default.jsx",
              },
            ],
          },
          "name": "Flex",
          "presets": Array [
            Object {
              "elements": Object {
                "6QZPBJVX17UAIO8R1CESY1Y2U45COCUB": Object {
                  "name": "FlexItem",
                  "props": Object {
                    "children": "A",
                  },
                },
                "HYKKZD23Z4KW4761DQH3KPFIGHXGVMXS": Object {
                  "name": "FlexItem",
                  "props": Object {
                    "children": "B",
                  },
                },
                "UE02H9I9LIN3SMMRV949G8KZJ9757XBY": Object {
                  "name": "FlexItem",
                  "props": Object {
                    "children": "C",
                  },
                },
                "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0": Object {
                  "name": "Flex",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "6QZPBJVX17UAIO8R1CESY1Y2U45COCUB",
                      },
                      Object {
                        "uxpinPresetElementId": "HYKKZD23Z4KW4761DQH3KPFIGHXGVMXS",
                      },
                      Object {
                        "uxpinPresetElementId": "UE02H9I9LIN3SMMRV949G8KZJ9757XBY",
                      },
                    ],
                  },
                },
              },
              "name": "default",
              "rootId": "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0",
            },
          ],
          "properties": Array [
            Object {
              "defaultValue": Object {
                "value": "stretch",
              },
              "description": "Align items along the cross axis [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "alignItems",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "center",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "stretch",
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "start",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "end",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "center",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "stretch",
                                },
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Media query (min-width) breakpoints along which to apply props marked
\\"&#xfeff;[[Responsive-capable]](#responsive)&#xfeff;\\"",
              "isRequired": false,
              "name": "breakpoints",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "union",
                    "structure": Object {
                      "elements": Array [
                        Object {
                          "name": "number",
                          "structure": Object {},
                        },
                        Object {
                          "name": "string",
                          "structure": Object {},
                        },
                      ],
                    },
                  },
                },
              },
            },
            Object {
              "description": "Must be [FlexItem(s)](./flex-item).",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "row",
              },
              "description": "Direction of flow of items along the main axis
[[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "direction",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "column",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "column-reverse",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "row",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "row-reverse",
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "column",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "column-reverse",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "row",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "row-reverse",
                                },
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "md",
              },
              "description": "Size of gap between children",
              "isRequired": false,
              "name": "gutterWidth",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": "start",
              },
              "description": "Align items along the main axis [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "justifyContent",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "center",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "around",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "between",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "evenly",
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "start",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "end",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "center",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "around",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "between",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "evenly",
                                },
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Determines if items can wrap along main axis
[[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "wrap",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "boolean",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "boolean",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Flex/FlexItem",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Flex/FlexItem/FlexItem.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Flex/FlexItem/presets/0-default.jsx",
              },
            ],
          },
          "name": "FlexItem",
          "presets": Array [
            Object {
              "elements": Object {
                "22C09393DB8407C10322133A742F10F3": Object {
                  "name": "FlexItem",
                  "props": Object {
                    "children": "Put flex item contents here",
                  },
                },
              },
              "name": "default",
              "rootId": "22C09393DB8407C10322133A742F10F3",
            },
          ],
          "properties": Array [
            Object {
              "description": "Align item along the cross axis [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "alignSelf",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "center",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "stretch",
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "start",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "end",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "center",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "stretch",
                                },
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Media query (min-width) breakpoints along which to apply props marked
\\"&#xfeff;[[Responsive-capable]](#responsive)&#xfeff;\\"",
              "isRequired": false,
              "name": "breakpoints",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "union",
                    "structure": Object {
                      "elements": Array [
                        Object {
                          "name": "number",
                          "structure": Object {},
                        },
                        Object {
                          "name": "string",
                          "structure": Object {},
                        },
                      ],
                    },
                  },
                },
              },
            },
            Object {
              "description": "When \`true\`, FlexItem composes [Flex](/components/flex); when \`false\`, it
composes [Box](/components/box)",
              "isRequired": false,
              "name": "flex",
              "type": Object {
                "name": "boolean",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": 0,
              },
              "description": "Grow factor along the main axis ([see example](#grow))
[[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "grow",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "defaultValue": Object {
                "value": 1,
              },
              "description": "Shrink factor along the main axis ([see example](#shrink))
[[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "shrink",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Grid/Grid",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Grid/Grid/Grid.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Grid/Grid/presets/0-default.jsx",
              },
            ],
          },
          "name": "Grid",
          "presets": Array [
            Object {
              "elements": Object {
                "6QZPBJVX17UAIO8R1CESY1Y2U45COCUB": Object {
                  "name": "GridItem",
                  "props": Object {
                    "children": "A",
                  },
                },
                "HYKKZD23Z4KW4761DQH3KPFIGHXGVMXS": Object {
                  "name": "GridItem",
                  "props": Object {
                    "children": "B",
                  },
                },
                "UE02H9I9LIN3SMMRV949G8KZJ9757XBY": Object {
                  "name": "GridItem",
                  "props": Object {
                    "children": "C",
                  },
                },
                "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0": Object {
                  "name": "Grid",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "6QZPBJVX17UAIO8R1CESY1Y2U45COCUB",
                      },
                      Object {
                        "uxpinPresetElementId": "HYKKZD23Z4KW4761DQH3KPFIGHXGVMXS",
                      },
                      Object {
                        "uxpinPresetElementId": "UE02H9I9LIN3SMMRV949G8KZJ9757XBY",
                      },
                    ],
                  },
                },
              },
              "name": "default",
              "rootId": "UY8QB4P8Y2TXG5170CH1K8IXALSB8VG0",
            },
          ],
          "properties": Array [
            Object {
              "defaultValue": Object {
                "value": "stretch",
              },
              "description": "Align grid items vertically
[[Responsive-capable]](/components/flex#responsive)",
              "isRequired": false,
              "name": "alignItems",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "center",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "stretch",
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "start",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "end",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "center",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "stretch",
                                },
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "Media query (min-width) breakpoints along which to apply props marked
\\"&#xfeff;[[Responsive-capable]](/components/flex#responsive)&#xfeff;\\"",
              "isRequired": false,
              "name": "breakpoints",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "union",
                    "structure": Object {
                      "elements": Array [
                        Object {
                          "name": "number",
                          "structure": Object {},
                        },
                        Object {
                          "name": "string",
                          "structure": Object {},
                        },
                      ],
                    },
                  },
                },
              },
            },
            Object {
              "description": "Must be [GridItem(s)](./grid-item).",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": 12,
              },
              "description": "Number of columns (see [GridItem's \`span\`](/components/grid-item#span))",
              "isRequired": false,
              "name": "columns",
              "type": Object {
                "name": "number",
                "structure": Object {},
              },
            },
            Object {
              "defaultValue": Object {
                "value": "md",
              },
              "description": "Size of horizontal gap between grid items",
              "isRequired": false,
              "name": "gutterWidth",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xs",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "sm",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "md",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "lg",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xl",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "xxl",
                      },
                    },
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "string",
                      "structure": Object {},
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/Grid/GridItem",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/Grid/GridItem/GridItem.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/Grid/GridItem/presets/0-default.jsx",
              },
            ],
          },
          "name": "GridItem",
          "presets": Array [
            Object {
              "elements": Object {
                "91D670B27AAB1E83C8AE74B6A94075FE": Object {
                  "name": "GridItem",
                  "props": Object {
                    "children": "Put grid item contents here",
                  },
                },
              },
              "name": "default",
              "rootId": "91D670B27AAB1E83C8AE74B6A94075FE",
            },
          ],
          "properties": Array [
            Object {
              "description": "Number of columns spanned [[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "span",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "number",
                      "structure": Object {},
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "number",
                                "structure": Object {},
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
          ],
          "wrappers": Array [],
        },
        Object {
          "defaultExported": true,
          "documentation": Object {
            "examples": Array [],
          },
          "info": Object {
            "dirPath": "src/library/StartEnd",
            "implementation": Object {
              "framework": "reactjs",
              "lang": "javascript",
              "path": "src/library/StartEnd/StartEnd.js",
            },
            "presets": Array [
              Object {
                "path": "src/library/StartEnd/presets/0-default.jsx",
              },
            ],
          },
          "name": "StartEnd",
          "presets": Array [
            Object {
              "elements": Object {
                "9I7N66RVKQODV9PA0D34VCBY5H0IPJ2M": Object {
                  "name": "Box",
                  "props": Object {
                    "children": "Start",
                  },
                },
                "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X": Object {
                  "name": "StartEnd",
                  "props": Object {
                    "children": Array [
                      Object {
                        "uxpinPresetElementId": "9I7N66RVKQODV9PA0D34VCBY5H0IPJ2M",
                      },
                      Object {
                        "uxpinPresetElementId": "KIWRK6UAO0TFQT1OGS4AAR5ED6CQQ1Z1",
                      },
                    ],
                  },
                },
                "KIWRK6UAO0TFQT1OGS4AAR5ED6CQQ1Z1": Object {
                  "name": "Box",
                  "props": Object {
                    "children": "End",
                  },
                },
              },
              "name": "default",
              "rootId": "EW6KZL8ZZIXSSNAMNU7DHV34F5UQVP1X",
            },
          ],
          "properties": Array [
            Object {
              "description": "Media query (min-width) breakpoints along which to apply props marked
\\"&#xfeff;[[Responsive-capable]](#responsive)&#xfeff;\\"",
              "isRequired": false,
              "name": "breakpoints",
              "type": Object {
                "name": "typedArray",
                "structure": Object {
                  "memberType": Object {
                    "name": "union",
                    "structure": Object {
                      "elements": Array [
                        Object {
                          "name": "number",
                          "structure": Object {},
                        },
                        Object {
                          "name": "string",
                          "structure": Object {},
                        },
                      ],
                    },
                  },
                },
              },
            },
            Object {
              "description": "Must be exactly two nodes",
              "isRequired": true,
              "name": "children",
              "type": Object {
                "name": "node",
                "structure": Object {},
              },
            },
            Object {
              "description": "Direction of flow of items along the main axis
[[Responsive-capable]](#responsive)",
              "isRequired": false,
              "name": "direction",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "column",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "row",
                      },
                    },
                    Object {
                      "name": "typedArray",
                      "structure": Object {
                        "memberType": Object {
                          "name": "union",
                          "structure": Object {
                            "elements": Array [
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "column",
                                },
                              },
                              Object {
                                "name": "literal",
                                "structure": Object {
                                  "value": "row",
                                },
                              },
                              Object {
                                "name": "empty",
                                "structure": Object {},
                              },
                            ],
                          },
                        },
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private From Flex; filtered out",
              "isRequired": false,
              "name": "justifyContent",
              "type": Object {
                "name": "any",
                "structure": Object {},
              },
            },
            Object {
              "description": "Determines which side stretches to fill the available width",
              "isRequired": false,
              "name": "priority",
              "type": Object {
                "name": "union",
                "structure": Object {
                  "elements": Array [
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "start",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "end",
                      },
                    },
                    Object {
                      "name": "literal",
                      "structure": Object {
                        "value": "both",
                      },
                    },
                  ],
                },
              },
            },
            Object {
              "description": "@Private From Flex; filtered out",
              "isRequired": false,
              "name": "wrap",
              "type": Object {
                "name": "any",
                "structure": Object {},
              },
            },
          ],
          "wrappers": Array [],
        },
      ],
      "name": "Layout",
    },
  ],
  "name": "Library from Code",
  "vcs": Object {
    "branchName": "master",
    "commitHash": "6a18faefe3d8339b066c92f1a10b27872f15729b",
    "paths": Object {
      "configPath": "/home/circleci/project/packages/uxpin-merge-cli/test/resources/repos/mineral-ui/uxpin.config.js",
      "projectRoot": "/home/circleci/project/packages/uxpin-merge-cli/test/resources/repos/mineral-ui",
    },
  },
}
`;
